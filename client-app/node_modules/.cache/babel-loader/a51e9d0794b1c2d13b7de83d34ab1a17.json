{"ast":null,"code":"/*!\n * Cropper.js v1.0.0-rc.3\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2017 Fengyuan Chen\n * Released under the MIT license\n *\n * Date: 2017-07-07T12:56:42.462Z\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Cropper = factory();\n})(this, function () {\n  'use strict';\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: 'crop',\n    // 'crop', 'move' or 'none'\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n  var TEMPLATE = '<div class=\"cropper-container\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  var createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var get = function get(object, property, receiver) {\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent === null) {\n        return undefined;\n      } else {\n        return get(parent, property, receiver);\n      }\n    } else if (\"value\" in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n\n      if (getter === undefined) {\n        return undefined;\n      }\n\n      return getter.call(receiver);\n    }\n  };\n\n  var set = function set(object, property, value, receiver) {\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n\n      if (parent !== null) {\n        set(parent, property, value, receiver);\n      }\n    } else if (\"value\" in desc && desc.writable) {\n      desc.value = value;\n    } else {\n      var setter = desc.set;\n\n      if (setter !== undefined) {\n        setter.call(receiver, value);\n      }\n    }\n\n    return value;\n  };\n\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }; // RegExps\n\n\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  var REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n  var REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n  var REGEXP_SPACES = /\\s+/;\n  var REGEXP_SUFFIX = /^(width|height|left|top|marginLeft|marginTop)$/;\n  var REGEXP_TRIM = /^\\s+(.*)\\s+$/;\n  var REGEXP_USERAGENT = /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i; // Utilities\n\n  var navigator = typeof window !== 'undefined' ? window.navigator : null;\n  var IS_SAFARI_OR_UIWEBVIEW = navigator && REGEXP_USERAGENT.test(navigator.userAgent);\n  var objectProto = Object.prototype;\n  var toString = objectProto.toString;\n  var hasOwnProperty = objectProto.hasOwnProperty;\n  var slice = Array.prototype.slice;\n  var fromCharCode = String.fromCharCode;\n\n  function typeOf(obj) {\n    return toString.call(obj).slice(8, -1).toLowerCase();\n  }\n\n  function isNumber(num) {\n    return typeof num === 'number' && !isNaN(num);\n  }\n\n  function isUndefined(obj) {\n    return typeof obj === 'undefined';\n  }\n\n  function isObject(obj) {\n    return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;\n  }\n\n  function isPlainObject(obj) {\n    if (!isObject(obj)) {\n      return false;\n    }\n\n    try {\n      var _constructor = obj.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isFunction(fn) {\n    return typeOf(fn) === 'function';\n  }\n\n  function isArray(arr) {\n    return Array.isArray ? Array.isArray(arr) : typeOf(arr) === 'array';\n  }\n\n  function trim(str) {\n    if (typeof str === 'string') {\n      str = str.trim ? str.trim() : str.replace(REGEXP_TRIM, '$1');\n    }\n\n    return str;\n  }\n\n  function each(obj, callback) {\n    if (obj && isFunction(callback)) {\n      var i = void 0;\n\n      if (isArray(obj) || isNumber(obj.length)\n      /* array-like */\n      ) {\n          var length = obj.length;\n\n          for (i = 0; i < length; i++) {\n            if (callback.call(obj, obj[i], i, obj) === false) {\n              break;\n            }\n          }\n        } else if (isObject(obj)) {\n        Object.keys(obj).forEach(function (key) {\n          callback.call(obj, obj[key], key, obj);\n        });\n      }\n    }\n\n    return obj;\n  }\n\n  function extend(obj) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(obj) && args.length > 0) {\n      if (Object.assign) {\n        return Object.assign.apply(Object, [obj].concat(args));\n      }\n\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            obj[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return obj;\n  }\n\n  function proxy(fn, context) {\n    for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    return function () {\n      for (var _len3 = arguments.length, args2 = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args2[_key3] = arguments[_key3];\n      }\n\n      return fn.apply(context, args.concat(args2));\n    };\n  }\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    each(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value += 'px';\n      }\n\n      style[property] = value;\n    });\n  }\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      each(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = trim(element.className);\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = className + ' ' + value;\n    }\n  }\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      each(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      each(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n\n  function hyphenate(str) {\n    return str.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n  }\n\n  function getData$1(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    } else if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute('data-' + hyphenate(name));\n  }\n\n  function setData$1(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute('data-' + hyphenate(name), data);\n    }\n  }\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      delete element[name];\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (e) {\n        element.dataset[name] = null;\n      }\n    } else {\n      element.removeAttribute('data-' + hyphenate(name));\n    }\n  }\n\n  function removeListener(element, type, handler) {\n    var types = trim(type).split(REGEXP_SPACES);\n\n    if (types.length > 1) {\n      each(types, function (t) {\n        removeListener(element, t, handler);\n      });\n      return;\n    }\n\n    if (element.removeEventListener) {\n      element.removeEventListener(type, handler, false);\n    } else if (element.detachEvent) {\n      element.detachEvent('on' + type, handler);\n    }\n  }\n\n  function addListener(element, type, _handler, once) {\n    var types = trim(type).split(REGEXP_SPACES);\n    var originalHandler = _handler;\n\n    if (types.length > 1) {\n      each(types, function (t) {\n        addListener(element, t, _handler);\n      });\n      return;\n    }\n\n    if (once) {\n      _handler = function handler() {\n        for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          args[_key4] = arguments[_key4];\n        }\n\n        removeListener(element, type, _handler);\n        return originalHandler.apply(element, args);\n      };\n    }\n\n    if (element.addEventListener) {\n      element.addEventListener(type, _handler, false);\n    } else if (element.attachEvent) {\n      element.attachEvent('on' + type, _handler);\n    }\n  }\n\n  function dispatchEvent(element, type, data) {\n    if (element.dispatchEvent) {\n      var event = void 0; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n      if (isFunction(Event) && isFunction(CustomEvent)) {\n        if (isUndefined(data)) {\n          event = new Event(type, {\n            bubbles: true,\n            cancelable: true\n          });\n        } else {\n          event = new CustomEvent(type, {\n            detail: data,\n            bubbles: true,\n            cancelable: true\n          });\n        }\n      } else if (isUndefined(data)) {\n        event = document.createEvent('Event');\n        event.initEvent(type, true, true);\n      } else {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(type, true, true, data);\n      } // IE9+\n\n\n      return element.dispatchEvent(event);\n    } else if (element.fireEvent) {\n      // IE6-10 (native events only)\n      return element.fireEvent('on' + type);\n    }\n\n    return true;\n  }\n\n  function getEvent(event) {\n    var e = event || window.event; // Fix target property (IE8)\n\n    if (!e.target) {\n      e.target = e.srcElement || document;\n    }\n\n    if (!isNumber(e.pageX) && isNumber(e.clientX)) {\n      var eventDoc = event.target.ownerDocument || document;\n      var doc = eventDoc.documentElement;\n      var body = eventDoc.body;\n      e.pageX = e.clientX + ((doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0));\n      e.pageY = e.clientY + ((doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0));\n    }\n\n    return e;\n  }\n\n  function getOffset(element) {\n    var doc = document.documentElement;\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + ((window.scrollX || doc && doc.scrollLeft || 0) - (doc && doc.clientLeft || 0)),\n      top: box.top + ((window.scrollY || doc && doc.scrollTop || 0) - (doc && doc.clientTop || 0))\n    };\n  }\n\n  function getByTag(element, tagName) {\n    return element.getElementsByTagName(tagName);\n  }\n\n  function getByClass(element, className) {\n    return element.getElementsByClassName ? element.getElementsByClassName(className) : element.querySelectorAll('.' + className);\n  }\n\n  function createElement(tagName) {\n    return document.createElement(tagName);\n  }\n\n  function appendChild(element, elem) {\n    element.appendChild(elem);\n  }\n\n  function removeChild(element) {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  function empty(element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  }\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n\n  function addTimestamp(url) {\n    var timestamp = 'timestamp=' + new Date().getTime();\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n\n  function getImageSize(image, callback) {\n    // Modern browsers (ignore Safari)\n    if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n      callback(image.naturalWidth, image.naturalHeight);\n      return;\n    } // IE8: Don't use `new Image()` here\n\n\n    var newImage = createElement('img');\n\n    newImage.onload = function load() {\n      callback(this.width, this.height);\n    };\n\n    newImage.src = image.src;\n  }\n\n  function getTransforms(data) {\n    var transforms = [];\n    var translateX = data.translateX;\n    var translateY = data.translateY;\n    var rotate = data.rotate;\n    var scaleX = data.scaleX;\n    var scaleY = data.scaleY;\n\n    if (isNumber(translateX) && translateX !== 0) {\n      transforms.push('translateX(' + translateX + 'px)');\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      transforms.push('translateY(' + translateY + 'px)');\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      transforms.push('rotate(' + rotate + 'deg)');\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      transforms.push('scaleX(' + scaleX + ')');\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      transforms.push('scaleY(' + scaleY + ')');\n    }\n\n    var transform = transforms.length ? transforms.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n\n  function getRotatedSizes(data, reversed) {\n    var deg = Math.abs(data.degree) % 180;\n    var arc = (deg > 90 ? 180 - deg : deg) * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var width = data.width;\n    var height = data.height;\n    var aspectRatio = data.aspectRatio;\n    var newWidth = void 0;\n    var newHeight = void 0;\n\n    if (!reversed) {\n      newWidth = width * cosArc + height * sinArc;\n      newHeight = width * sinArc + height * cosArc;\n    } else {\n      newWidth = width / (cosArc + sinArc / aspectRatio);\n      newHeight = newWidth / aspectRatio;\n    }\n\n    return {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  function getSourceCanvas(image, data, options) {\n    var canvas = createElement('canvas');\n    var context = canvas.getContext('2d');\n    var dstX = 0;\n    var dstY = 0;\n    var dstWidth = data.naturalWidth;\n    var dstHeight = data.naturalHeight;\n    var rotate = data.rotate;\n    var scaleX = data.scaleX;\n    var scaleY = data.scaleY;\n    var scalable = isNumber(scaleX) && isNumber(scaleY) && (scaleX !== 1 || scaleY !== 1);\n    var rotatable = isNumber(rotate) && rotate !== 0;\n    var advanced = rotatable || scalable;\n    var canvasWidth = dstWidth * Math.abs(scaleX || 1);\n    var canvasHeight = dstHeight * Math.abs(scaleY || 1);\n    var translateX = void 0;\n    var translateY = void 0;\n    var rotated = void 0;\n\n    if (scalable) {\n      translateX = canvasWidth / 2;\n      translateY = canvasHeight / 2;\n    }\n\n    if (rotatable) {\n      rotated = getRotatedSizes({\n        width: canvasWidth,\n        height: canvasHeight,\n        degree: rotate\n      });\n      canvasWidth = rotated.width;\n      canvasHeight = rotated.height;\n      translateX = canvasWidth / 2;\n      translateY = canvasHeight / 2;\n    }\n\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n\n    if (options.fillColor) {\n      context.fillStyle = options.fillColor;\n      context.fillRect(0, 0, canvasWidth, canvasHeight);\n    }\n\n    if (advanced) {\n      dstX = -dstWidth / 2;\n      dstY = -dstHeight / 2;\n      context.save();\n      context.translate(translateX, translateY);\n    } // Rotate should come first before scale as in the \"getTransform\" function\n\n\n    if (rotatable) {\n      context.rotate(rotate * Math.PI / 180);\n    }\n\n    if (scalable) {\n      context.scale(scaleX, scaleY);\n    }\n\n    context.imageSmoothingEnabled = !!options.imageSmoothingEnabled;\n\n    if (options.imageSmoothingQuality) {\n      context.imageSmoothingQuality = options.imageSmoothingQuality;\n    }\n\n    context.drawImage(image, Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n\n    if (advanced) {\n      context.restore();\n    }\n\n    return canvas;\n  }\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i = start;\n\n    for (length += start; i < length; i++) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n\n  function getOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var length = dataView.byteLength;\n    var orientation = void 0;\n    var exifIDCode = void 0;\n    var tiffOffset = void 0;\n    var firstIFDOffset = void 0;\n    var littleEndian = void 0;\n    var endianness = void 0;\n    var app1Start = void 0;\n    var ifdStart = void 0;\n    var offset = void 0;\n    var i = void 0; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      offset = 2;\n\n      while (offset < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset++;\n      }\n    }\n\n    if (app1Start) {\n      exifIDCode = app1Start + 4;\n      tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      length = dataView.getUint16(ifdStart, littleEndian);\n\n      for (i = 0; i < length; i++) {\n        offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(offset, littleEndian); // Override the orientation with its default value for Safari\n\n            if (IS_SAFARI_OR_UIWEBVIEW) {\n              dataView.setUint16(offset, 1, littleEndian);\n            }\n\n            break;\n          }\n      }\n    }\n\n    return orientation;\n  }\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var length = binary.length;\n    var arrayBuffer = new ArrayBuffer(length);\n    var dataView = new Uint8Array(arrayBuffer);\n    var i = void 0;\n\n    for (i = 0; i < length; i++) {\n      dataView[i] = binary.charCodeAt(i);\n    }\n\n    return arrayBuffer;\n  } // Only available for JPEG image\n\n\n  function arrayBufferToDataURL(arrayBuffer) {\n    var dataView = new Uint8Array(arrayBuffer);\n    var length = dataView.length;\n    var base64 = '';\n    var i = void 0;\n\n    for (i = 0; i < length; i++) {\n      base64 += fromCharCode(dataView[i]);\n    }\n\n    return 'data:image/jpeg;base64,' + btoa(base64);\n  }\n\n  var render$1 = {\n    render: function render() {\n      var self = this;\n      self.initContainer();\n      self.initCanvas();\n      self.initCropBox();\n      self.renderCanvas();\n\n      if (self.cropped) {\n        self.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var self = this;\n      var options = self.options;\n      var element = self.element;\n      var container = self.container;\n      var cropper = self.cropper;\n      var hidden = 'cropper-hidden';\n      var containerData = void 0;\n      addClass(cropper, hidden);\n      removeClass(element, hidden);\n      self.containerData = containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, hidden);\n      removeClass(cropper, hidden);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var self = this;\n      var viewMode = self.options.viewMode;\n      var containerData = self.containerData;\n      var imageData = self.imageData;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        aspectRatio: aspectRatio,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.oldLeft = canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.oldTop = canvasData.top = (containerData.height - canvasHeight) / 2;\n      self.canvasData = canvasData;\n      self.limited = viewMode === 1 || viewMode === 2;\n      self.limitCanvas(true, true);\n      self.initialImageData = extend({}, imageData);\n      self.initialCanvasData = extend({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var self = this;\n      var options = self.options;\n      var viewMode = options.viewMode;\n      var containerData = self.containerData;\n      var canvasData = self.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropBoxData = self.cropBoxData;\n      var cropped = self.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        if (minCanvasWidth && minCanvasHeight) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          } else {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          }\n        } else if (minCanvasWidth) {\n          minCanvasHeight = minCanvasWidth / aspectRatio;\n        } else if (minCanvasHeight) {\n          minCanvasWidth = minCanvasHeight * aspectRatio;\n        }\n\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && self.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed) {\n      var self = this;\n      var canvasData = self.canvasData;\n      var imageData = self.imageData;\n      var rotate = imageData.rotate;\n\n      if (self.rotated) {\n        self.rotated = false; // Computes rotated sizes with image sizes\n\n        var rotatedData = getRotatedSizes({\n          width: imageData.width,\n          height: imageData.height,\n          degree: rotate\n        });\n        var aspectRatio = rotatedData.width / rotatedData.height;\n        var isSquareImage = imageData.aspectRatio === 1;\n\n        if (isSquareImage || aspectRatio !== canvasData.aspectRatio) {\n          canvasData.left -= (rotatedData.width - canvasData.width) / 2;\n          canvasData.top -= (rotatedData.height - canvasData.height) / 2;\n          canvasData.width = rotatedData.width;\n          canvasData.height = rotatedData.height;\n          canvasData.aspectRatio = aspectRatio;\n          canvasData.naturalWidth = imageData.naturalWidth;\n          canvasData.naturalHeight = imageData.naturalHeight; // Computes rotated sizes with natural image sizes\n\n          if (isSquareImage && rotate % 90 || rotate % 180) {\n            var rotatedData2 = getRotatedSizes({\n              width: imageData.naturalWidth,\n              height: imageData.naturalHeight,\n              degree: rotate\n            });\n            canvasData.naturalWidth = rotatedData2.width;\n            canvasData.naturalHeight = rotatedData2.height;\n          }\n\n          self.limitCanvas(true, false);\n        }\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      self.limitCanvas(false, true);\n      canvasData.oldLeft = canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.oldTop = canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      setStyle(self.canvas, extend({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      self.renderImage();\n\n      if (self.cropped && self.limited) {\n        self.limitCropBox(true, true);\n      }\n\n      if (changed) {\n        self.output();\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var self = this;\n      var canvasData = self.canvasData;\n      var imageData = self.imageData;\n      var newImageData = void 0;\n      var reversedData = void 0;\n      var reversedWidth = void 0;\n      var reversedHeight = void 0;\n\n      if (imageData.rotate) {\n        reversedData = getRotatedSizes({\n          width: canvasData.width,\n          height: canvasData.height,\n          degree: imageData.rotate,\n          aspectRatio: imageData.aspectRatio\n        }, true);\n        reversedWidth = reversedData.width;\n        reversedHeight = reversedData.height;\n        newImageData = {\n          width: reversedWidth,\n          height: reversedHeight,\n          left: (canvasData.width - reversedWidth) / 2,\n          top: (canvasData.height - reversedHeight) / 2\n        };\n      }\n\n      extend(imageData, newImageData || {\n        width: canvasData.width,\n        height: canvasData.height,\n        left: 0,\n        top: 0\n      });\n      setStyle(self.image, extend({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(extend({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        self.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var self = this;\n      var options = self.options;\n      var aspectRatio = options.aspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var canvasData = self.canvasData;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      self.cropBoxData = cropBoxData;\n      self.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.oldLeft = cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.oldTop = cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      self.initialCropBoxData = extend({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var self = this;\n      var options = self.options;\n      var aspectRatio = options.aspectRatio;\n      var containerData = self.containerData;\n      var canvasData = self.canvasData;\n      var cropBoxData = self.cropBoxData;\n      var limited = self.limited;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n        var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height); // The min/maxCropBoxWidth/Height must be less than containerWidth/Height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var self = this;\n      var options = self.options;\n      var containerData = self.containerData;\n      var cropBoxData = self.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      self.limitCropBox(false, true);\n      cropBoxData.oldLeft = cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.oldTop = cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData$1(self.face, 'action', cropBoxData.width === containerData.width && cropBoxData.height === containerData.height ? 'move' : 'all');\n      }\n\n      setStyle(self.cropBox, extend({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (self.cropped && self.limited) {\n        self.limitCanvas(true, true);\n      }\n\n      if (!self.disabled) {\n        self.output();\n      }\n    },\n    output: function output() {\n      var self = this;\n      self.preview();\n\n      if (self.complete) {\n        dispatchEvent(self.element, 'crop', self.getData());\n      }\n    }\n  };\n  var DATA_PREVIEW = 'preview';\n  var preview$1 = {\n    initPreview: function initPreview() {\n      var self = this;\n      var preview = self.options.preview;\n      var image = createElement('img');\n      var crossOrigin = self.crossOrigin;\n      var url = crossOrigin ? self.crossOriginUrl : self.url;\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      appendChild(self.viewBox, image);\n      self.image2 = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview.querySelector ? [preview] : document.querySelectorAll(preview);\n      self.previews = previews;\n      each(previews, function (element) {\n        var img = createElement('img'); // Save the original size for recover\n\n        setData$1(element, DATA_PREVIEW, {\n          width: element.offsetWidth,\n          height: element.offsetHeight,\n          html: element.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        empty(element);\n        appendChild(element, img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      each(this.previews, function (element) {\n        var data = getData$1(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var self = this;\n      var imageData = self.imageData;\n      var canvasData = self.canvasData;\n      var cropBoxData = self.cropBoxData;\n      var cropBoxWidth = cropBoxData.width;\n      var cropBoxHeight = cropBoxData.height;\n      var width = imageData.width;\n      var height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!self.cropped || self.disabled) {\n        return;\n      }\n\n      setStyle(self.image2, extend({\n        width: width,\n        height: height\n      }, getTransforms(extend({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      each(self.previews, function (element) {\n        var data = getData$1(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(getByTag(element, 'img')[0], extend({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(extend({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  }; // Globals\n\n  var PointerEvent = typeof window !== 'undefined' ? window.PointerEvent : null; // Events\n\n  var EVENT_POINTER_DOWN = PointerEvent ? 'pointerdown' : 'touchstart mousedown';\n  var EVENT_POINTER_MOVE = PointerEvent ? 'pointermove' : 'touchmove mousemove';\n  var EVENT_POINTER_UP = PointerEvent ? ' pointerup pointercancel' : 'touchend touchcancel mouseup';\n  var EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP$1 = 'crop';\n  var EVENT_ZOOM = 'zoom';\n  var events = {\n    bind: function bind() {\n      var self = this;\n      var options = self.options;\n      var element = self.element;\n      var cropper = self.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP$1, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, self.onCropStart = proxy(self.cropStart, self));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, self.onWheel = proxy(self.wheel, self));\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, self.onDblclick = proxy(self.dblclick, self));\n      }\n\n      addListener(document, EVENT_POINTER_MOVE, self.onCropMove = proxy(self.cropMove, self));\n      addListener(document, EVENT_POINTER_UP, self.onCropEnd = proxy(self.cropEnd, self));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, self.onResize = proxy(self.resize, self));\n      }\n    },\n    unbind: function unbind() {\n      var self = this;\n      var options = self.options;\n      var element = self.element;\n      var cropper = self.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP$1, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, self.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, self.onWheel);\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, self.onDblclick);\n      }\n\n      removeListener(document, EVENT_POINTER_MOVE, self.onCropMove);\n      removeListener(document, EVENT_POINTER_UP, self.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, self.onResize);\n      }\n    }\n  };\n  var REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\n\n  function getPointer(_ref, endOnly) {\n    var pageX = _ref.pageX,\n        pageY = _ref.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n\n    if (endOnly) {\n      return end;\n    }\n\n    return extend({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n\n  var handlers = {\n    resize: function resize() {\n      var self = this;\n      var options = self.options;\n      var container = self.container;\n      var containerData = self.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || 200;\n      var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n      if (self.disabled || containerData.width === minContainerWidth || containerData.height === minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        (function () {\n          var canvasData = void 0;\n          var cropBoxData = void 0;\n\n          if (options.restore) {\n            canvasData = self.getCanvasData();\n            cropBoxData = self.getCropBoxData();\n          }\n\n          self.render();\n\n          if (options.restore) {\n            self.setCanvasData(each(canvasData, function (n, i) {\n              canvasData[i] = n * ratio;\n            }));\n            self.setCropBoxData(each(cropBoxData, function (n, i) {\n              cropBoxData[i] = n * ratio;\n            }));\n          }\n        })();\n      }\n    },\n    dblclick: function dblclick() {\n      var self = this;\n\n      if (self.disabled || self.options.dragMode === 'none') {\n        return;\n      }\n\n      self.setDragMode(hasClass(self.dragBox, 'cropper-crop') ? 'move' : 'crop');\n    },\n    wheel: function wheel(event) {\n      var self = this;\n      var e = getEvent(event);\n      var ratio = Number(self.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (self.disabled) {\n        return;\n      }\n\n      e.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (self.wheeling) {\n        return;\n      }\n\n      self.wheeling = true;\n      setTimeout(function () {\n        self.wheeling = false;\n      }, 50);\n\n      if (e.deltaY) {\n        delta = e.deltaY > 0 ? 1 : -1;\n      } else if (e.wheelDelta) {\n        delta = -e.wheelDelta / 120;\n      } else if (e.detail) {\n        delta = e.detail > 0 ? 1 : -1;\n      }\n\n      self.zoom(-delta * ratio, e);\n    },\n    cropStart: function cropStart(event) {\n      var self = this;\n\n      if (self.disabled) {\n        return;\n      }\n\n      var options = self.options;\n      var pointers = self.pointers;\n      var e = getEvent(event);\n      var action = void 0;\n\n      if (e.changedTouches) {\n        // Handle touch event\n        each(e.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[e.pointerId || 0] = getPointer(e);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = 'zoom';\n      } else {\n        action = getData$1(e.target, 'action');\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(self.element, 'cropstart', {\n        originalEvent: e,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      e.preventDefault();\n      self.action = action;\n      self.cropping = false;\n\n      if (action === 'crop') {\n        self.cropping = true;\n        addClass(self.dragBox, 'cropper-modal');\n      }\n    },\n    cropMove: function cropMove(event) {\n      var self = this;\n      var action = self.action;\n\n      if (self.disabled || !action) {\n        return;\n      }\n\n      var pointers = self.pointers;\n      var e = getEvent(event);\n      e.preventDefault();\n\n      if (dispatchEvent(self.element, 'cropmove', {\n        originalEvent: e,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (e.changedTouches) {\n        each(e.changedTouches, function (touch) {\n          extend(pointers[touch.identifier], getPointer(touch, true));\n        });\n      } else {\n        extend(pointers[e.pointerId || 0], getPointer(e, true));\n      }\n\n      self.change(e);\n    },\n    cropEnd: function cropEnd(event) {\n      var self = this;\n\n      if (self.disabled) {\n        return;\n      }\n\n      var action = self.action;\n      var pointers = self.pointers;\n      var e = getEvent(event);\n\n      if (e.changedTouches) {\n        each(e.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[e.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      e.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        self.action = '';\n      }\n\n      if (self.cropping) {\n        self.cropping = false;\n        toggleClass(self.dragBox, 'cropper-modal', self.cropped && this.options.modal);\n      }\n\n      dispatchEvent(self.element, 'cropend', {\n        originalEvent: e,\n        action: action\n      });\n    }\n  }; // Actions\n\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = extend({}, pointers);\n    var ratios = [];\n    each(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      each(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n\n  var change$1 = {\n    change: function change(e) {\n      var self = this;\n      var options = self.options;\n      var containerData = self.containerData;\n      var canvasData = self.canvasData;\n      var cropBoxData = self.cropBoxData;\n      var aspectRatio = options.aspectRatio;\n      var action = self.action;\n      var width = cropBoxData.width;\n      var height = cropBoxData.height;\n      var left = cropBoxData.left;\n      var top = cropBoxData.top;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset = void 0; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && e.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (self.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointers = self.pointers;\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      if (aspectRatio) {\n        range.X = range.y * aspectRatio;\n        range.Y = range.x / aspectRatio;\n      }\n\n      switch (action) {\n        // Move crop box\n        case 'all':\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          width += range.x;\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top -= range.Y / 2;\n          }\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = 0;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          height -= range.y;\n          top += range.y;\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += range.X / 2;\n          }\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = 0;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          width -= range.x;\n          left += range.x;\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += range.Y / 2;\n          }\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = 0;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          height += range.y;\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left -= range.X / 2;\n          }\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = 0;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = 0;\n            width = 0;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = 0;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = 0;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += range.X;\n          } else {\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = 0;\n            width = 0;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = 0;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = 0;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = 0;\n            width = 0;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = 0;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = 0;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = 0;\n            width = 0;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = 0;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = 0;\n          }\n\n          break;\n        // Move canvas\n\n        case 'move':\n          self.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case 'zoom':\n          self.zoom(getMaxZoomRatio(pointers), e);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case 'crop':\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(self.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!self.cropped) {\n            removeClass(self.cropBox, 'cropper-hidden');\n            self.cropped = true;\n\n            if (self.limited) {\n              self.limitCropBox(true, true);\n            }\n          }\n\n          break;\n        // No default\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        self.action = action;\n        self.renderCropBox();\n      } // Override\n\n\n      each(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    each(pointers, function (_ref) {\n      var startX = _ref.startX,\n          startY = _ref.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      var self = this;\n\n      if (self.ready && !self.disabled) {\n        if (!self.cropped) {\n          self.cropped = true;\n          self.limitCropBox(true, true);\n\n          if (self.options.modal) {\n            addClass(self.dragBox, 'cropper-modal');\n          }\n\n          removeClass(self.cropBox, 'cropper-hidden');\n        }\n\n        self.setCropBoxData(self.initialCropBoxData);\n      }\n\n      return self;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      var self = this;\n\n      if (self.ready && !self.disabled) {\n        self.imageData = extend({}, self.initialImageData);\n        self.canvasData = extend({}, self.initialCanvasData);\n        self.cropBoxData = extend({}, self.initialCropBoxData);\n        self.renderCanvas();\n\n        if (self.cropped) {\n          self.renderCropBox();\n        }\n      }\n\n      return self;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      var self = this;\n\n      if (self.cropped && !self.disabled) {\n        extend(self.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        self.cropped = false;\n        self.renderCropBox();\n        self.limitCanvas(); // Render canvas after crop box rendered\n\n        self.renderCanvas();\n        removeClass(self.dragBox, 'cropper-modal');\n        addClass(self.cropBox, 'cropper-hidden');\n      }\n\n      return self;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     *\n     * @param {String} url\n     * @param {Boolean} onlyColorChanged (optional)\n     */\n    replace: function replace(url, onlyColorChanged) {\n      var self = this;\n\n      if (!self.disabled && url) {\n        if (self.isImg) {\n          self.element.src = url;\n        }\n\n        if (onlyColorChanged) {\n          self.url = url;\n          self.image.src = url;\n\n          if (self.ready) {\n            self.image2.src = url;\n            each(self.previews, function (element) {\n              getByTag(element, 'img')[0].src = url;\n            });\n          }\n        } else {\n          if (self.isImg) {\n            self.replaced = true;\n          } // Clear previous data\n\n\n          self.options.data = null;\n          self.load(url);\n        }\n      }\n\n      return self;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      var self = this;\n\n      if (self.ready) {\n        self.disabled = false;\n        removeClass(self.cropper, 'cropper-disabled');\n      }\n\n      return self;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      var self = this;\n\n      if (self.ready) {\n        self.disabled = true;\n        addClass(self.cropper, 'cropper-disabled');\n      }\n\n      return self;\n    },\n    // Destroy the cropper and remove the instance from the image\n    destroy: function destroy() {\n      var self = this;\n      var element = self.element;\n      var image = self.image;\n\n      if (self.loaded) {\n        if (self.isImg && self.replaced) {\n          element.src = self.originalUrl;\n        }\n\n        self.unbuild();\n        removeClass(element, 'cropper-hidden');\n      } else if (self.isImg) {\n        removeListener(element, 'load', self.onStart);\n      } else if (image) {\n        removeChild(image);\n      }\n\n      removeData(element, 'cropper');\n      return self;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     *\n     * @param {Number} offsetX\n     * @param {Number} offsetY (optional)\n     */\n    move: function move(offsetX, offsetY) {\n      var self = this;\n      var canvasData = self.canvasData;\n      return self.moveTo(isUndefined(offsetX) ? offsetX : canvasData.left + Number(offsetX), isUndefined(offsetY) ? offsetY : canvasData.top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     *\n     * @param {Number} x\n     * @param {Number} y (optional)\n     */\n    moveTo: function moveTo(x, y) {\n      var self = this;\n      var canvasData = self.canvasData;\n      var changed = false; // If \"y\" is not present, its default value is \"x\"\n\n      if (isUndefined(y)) {\n        y = x;\n      }\n\n      x = Number(x);\n      y = Number(y);\n\n      if (self.ready && !self.disabled && self.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          self.renderCanvas(true);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     *\n     * @param {Number} ratio\n     * @param {Event} _originalEvent (private)\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var self = this;\n      var canvasData = self.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return self.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     *\n     * @param {Number} ratio\n     * @param {Event} _originalEvent (private)\n     */\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      var self = this;\n      var options = self.options;\n      var canvasData = self.canvasData;\n      var width = canvasData.width;\n      var height = canvasData.height;\n      var naturalWidth = canvasData.naturalWidth;\n      var naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && self.ready && !self.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(self.element, 'zoom', {\n          originalEvent: _originalEvent,\n          oldRatio: width / naturalWidth,\n          ratio: newWidth / naturalWidth\n        }) === false) {\n          return self;\n        }\n\n        if (_originalEvent) {\n          var pointers = self.pointers;\n          var offset = getOffset(self.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        self.renderCanvas(true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     *\n     * @param {Number} degree\n     */\n    rotate: function rotate(degree) {\n      var self = this;\n      return self.rotateTo((self.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#rotate()\n     *\n     * @param {Number} degree\n     */\n    rotateTo: function rotateTo(degree) {\n      var self = this;\n      degree = Number(degree);\n\n      if (isNumber(degree) && self.ready && !self.disabled && self.options.rotatable) {\n        self.imageData.rotate = degree % 360;\n        self.rotated = true;\n        self.renderCanvas(true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Scale the image\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#scale()\n     *\n     * @param {Number} scaleX\n     * @param {Number} scaleY (optional)\n     */\n    scale: function scale(scaleX, scaleY) {\n      var self = this;\n      var imageData = self.imageData;\n      var changed = false; // If \"scaleY\" is not present, its default value is \"scaleX\"\n\n      if (isUndefined(scaleY)) {\n        scaleY = scaleX;\n      }\n\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (self.ready && !self.disabled && self.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          changed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          changed = true;\n        }\n\n        if (changed) {\n          self.renderImage(true);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Scale the abscissa of the image\n     *\n     * @param {Number} scaleX\n     */\n    scaleX: function scaleX(_scaleX) {\n      var self = this;\n      var scaleY = self.imageData.scaleY;\n      return self.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the ordinate of the image\n     *\n     * @param {Number} scaleY\n     */\n    scaleY: function scaleY(_scaleY) {\n      var self = this;\n      var scaleX = self.imageData.scaleX;\n      return self.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     *\n     * @param {Boolean} rounded (optional)\n     * @return {Object} data\n     */\n    getData: function getData(rounded) {\n      var self = this;\n      var options = self.options;\n      var imageData = self.imageData;\n      var canvasData = self.canvasData;\n      var cropBoxData = self.cropBoxData;\n      var ratio = void 0;\n      var data = void 0;\n\n      if (self.ready && self.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        ratio = imageData.width / imageData.naturalWidth;\n        each(data, function (n, i) {\n          n /= ratio;\n          data[i] = rounded ? Math.round(n) : n;\n        });\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     *\n     * @param {Object} data\n     */\n    setData: function setData(data) {\n      var self = this;\n      var options = self.options;\n      var imageData = self.imageData;\n      var canvasData = self.canvasData;\n      var cropBoxData = {};\n      var rotated = void 0;\n      var scaled = void 0;\n      var ratio = void 0;\n\n      if (isFunction(data)) {\n        data = data.call(self.element);\n      }\n\n      if (self.ready && !self.disabled && isPlainObject(data)) {\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            self.rotated = rotated = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            scaled = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            scaled = true;\n          }\n        }\n\n        if (rotated) {\n          self.renderCanvas();\n        } else if (scaled) {\n          self.renderImage();\n        }\n\n        ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        self.setCropBoxData(cropBoxData);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get the container size data\n     *\n     * @return {Object} data\n     */\n    getContainerData: function getContainerData() {\n      var self = this;\n      return self.ready ? self.containerData : {};\n    },\n\n    /**\n     * Get the image position and size data\n     *\n     * @return {Object} data\n     */\n    getImageData: function getImageData() {\n      var self = this;\n      return self.loaded ? self.imageData : {};\n    },\n\n    /**\n     * Get the canvas position and size data\n     *\n     * @return {Object} data\n     */\n    getCanvasData: function getCanvasData() {\n      var self = this;\n      var canvasData = self.canvasData;\n      var data = {};\n\n      if (self.ready) {\n        each(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data\n     *\n     * @param {Object} data\n     */\n    setCanvasData: function setCanvasData(data) {\n      var self = this;\n      var canvasData = self.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (isFunction(data)) {\n        data = data.call(self.element);\n      }\n\n      if (self.ready && !self.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        self.renderCanvas(true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get the crop box position and size data\n     *\n     * @return {Object} data\n     */\n    getCropBoxData: function getCropBoxData() {\n      var self = this;\n      var cropBoxData = self.cropBoxData;\n      var data = void 0;\n\n      if (self.ready && self.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data\n     *\n     * @param {Object} data\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var self = this;\n      var cropBoxData = self.cropBoxData;\n      var aspectRatio = self.options.aspectRatio;\n      var widthChanged = void 0;\n      var heightChanged = void 0;\n\n      if (isFunction(data)) {\n        data = data.call(self.element);\n      }\n\n      if (self.ready && self.cropped && !self.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        self.renderCropBox();\n      }\n\n      return self;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image\n     *\n     * @param {Object} options (optional)\n     * @return {HTMLCanvasElement} canvas\n     */\n    getCroppedCanvas: function getCroppedCanvas(options) {\n      var self = this;\n\n      if (!self.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      if (!isPlainObject(options)) {\n        options = {};\n      } // Return the whole canvas if not cropped\n\n\n      if (!self.cropped) {\n        return getSourceCanvas(self.image, self.imageData, options);\n      }\n\n      var data = self.getData();\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var aspectRatio = originalWidth / originalHeight;\n      var scaledWidth = void 0;\n      var scaledHeight = void 0;\n      var scaledRatio = void 0;\n\n      if (isPlainObject(options)) {\n        scaledWidth = options.width;\n        scaledHeight = options.height;\n\n        if (scaledWidth) {\n          scaledHeight = scaledWidth / aspectRatio;\n          scaledRatio = scaledWidth / originalWidth;\n        } else if (scaledHeight) {\n          scaledWidth = scaledHeight * aspectRatio;\n          scaledRatio = scaledHeight / originalHeight;\n        }\n      } // The canvas element will use `Math.floor` on a float number, so floor first\n\n\n      var canvasWidth = Math.floor(scaledWidth || originalWidth);\n      var canvasHeight = Math.floor(scaledHeight || originalHeight);\n      var canvas = createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n\n      if (options.fillColor) {\n        context.fillStyle = options.fillColor;\n        context.fillRect(0, 0, canvasWidth, canvasHeight);\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var parameters = function () {\n        var source = getSourceCanvas(self.image, self.imageData, options);\n        var sourceWidth = source.width;\n        var sourceHeight = source.height;\n        var canvasData = self.canvasData;\n        var params = [source]; // Source canvas\n\n        var srcX = data.x + canvasData.naturalWidth * (Math.abs(data.scaleX || 1) - 1) / 2;\n        var srcY = data.y + canvasData.naturalHeight * (Math.abs(data.scaleY || 1) - 1) / 2;\n        var srcWidth = void 0;\n        var srcHeight = void 0; // Destination canvas\n\n        var dstX = void 0;\n        var dstY = void 0;\n        var dstWidth = void 0;\n        var dstHeight = void 0;\n\n        if (srcX <= -originalWidth || srcX > sourceWidth) {\n          srcX = srcWidth = dstX = dstWidth = 0;\n        } else if (srcX <= 0) {\n          dstX = -srcX;\n          srcX = 0;\n          srcWidth = dstWidth = Math.min(sourceWidth, originalWidth + srcX);\n        } else if (srcX <= sourceWidth) {\n          dstX = 0;\n          srcWidth = dstWidth = Math.min(originalWidth, sourceWidth - srcX);\n        }\n\n        if (srcWidth <= 0 || srcY <= -originalHeight || srcY > sourceHeight) {\n          srcY = srcHeight = dstY = dstHeight = 0;\n        } else if (srcY <= 0) {\n          dstY = -srcY;\n          srcY = 0;\n          srcHeight = dstHeight = Math.min(sourceHeight, originalHeight + srcY);\n        } else if (srcY <= sourceHeight) {\n          dstY = 0;\n          srcHeight = dstHeight = Math.min(originalHeight, sourceHeight - srcY);\n        }\n\n        params.push(Math.floor(srcX), Math.floor(srcY), Math.floor(srcWidth), Math.floor(srcHeight)); // Scale destination sizes\n\n        if (scaledRatio) {\n          dstX *= scaledRatio;\n          dstY *= scaledRatio;\n          dstWidth *= scaledRatio;\n          dstHeight *= scaledRatio;\n        } // Avoid \"IndexSizeError\" in IE and Firefox\n\n\n        if (dstWidth > 0 && dstHeight > 0) {\n          params.push(Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n        }\n\n        return params;\n      }();\n\n      context.imageSmoothingEnabled = !!options.imageSmoothingEnabled;\n\n      if (options.imageSmoothingQuality) {\n        context.imageSmoothingQuality = options.imageSmoothingQuality;\n      }\n\n      context.drawImage.apply(context, toConsumableArray(parameters));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box\n     *\n     * @param {Number} aspectRatio\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var self = this;\n      var options = self.options;\n\n      if (!self.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (self.ready) {\n          self.initCropBox();\n\n          if (self.cropped) {\n            self.renderCropBox();\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Change the drag mode\n     *\n     * @param {String} mode (optional)\n     */\n    setDragMode: function setDragMode(mode) {\n      var self = this;\n      var options = self.options;\n      var dragBox = self.dragBox;\n      var face = self.face;\n      var croppable = void 0;\n      var movable = void 0;\n\n      if (self.loaded && !self.disabled) {\n        croppable = mode === 'crop';\n        movable = options.movable && mode === 'move';\n        mode = croppable || movable ? mode : 'none';\n        setData$1(dragBox, 'action', mode);\n        toggleClass(dragBox, 'cropper-crop', croppable);\n        toggleClass(dragBox, 'cropper-move', movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData$1(face, 'action', mode);\n          toggleClass(face, 'cropper-crop', croppable);\n          toggleClass(face, 'cropper-move', movable);\n        }\n      }\n\n      return self;\n    }\n  }; // Constants\n\n  var NAMESPACE = 'cropper'; // Classes\n\n  var CLASS_HIDDEN = NAMESPACE + '-hidden'; // Events\n\n  var EVENT_ERROR = 'error';\n  var EVENT_LOAD = 'load';\n  var EVENT_READY = 'ready';\n  var EVENT_CROP = 'crop'; // RegExps\n\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var AnotherCropper = void 0;\n\n  var Cropper = function () {\n    function Cropper(element, options) {\n      classCallCheck(this, Cropper);\n      var self = this;\n      self.element = element;\n      self.options = extend({}, DEFAULTS, isPlainObject(options) && options);\n      self.loaded = false;\n      self.ready = false;\n      self.complete = false;\n      self.rotated = false;\n      self.cropped = false;\n      self.disabled = false;\n      self.replaced = false;\n      self.limited = false;\n      self.wheeling = false;\n      self.isImg = false;\n      self.originalUrl = '';\n      self.canvasData = null;\n      self.cropBoxData = null;\n      self.previews = null;\n      self.pointers = {};\n      self.init();\n    }\n\n    createClass(Cropper, [{\n      key: 'init',\n      value: function init() {\n        var self = this;\n        var element = self.element;\n        var tagName = element.tagName.toLowerCase();\n        var url = void 0;\n\n        if (getData$1(element, NAMESPACE)) {\n          return;\n        }\n\n        setData$1(element, NAMESPACE, self);\n\n        if (tagName === 'img') {\n          self.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          self.originalUrl = url = element.getAttribute('src'); // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        self.load(url);\n      }\n    }, {\n      key: 'load',\n      value: function load(url) {\n        var self = this;\n        var options = self.options;\n        var element = self.element;\n\n        if (!url) {\n          return;\n        }\n\n        self.url = url;\n        self.imageData = {};\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          self.clone();\n          return;\n        } // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            self.read(dataURLToArrayBuffer(url));\n          } else {\n            self.clone();\n          }\n\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n\n        xhr.onerror = xhr.onabort = function () {\n          self.clone();\n        };\n\n        xhr.onload = function () {\n          self.read(xhr.response);\n        };\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('get', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: 'read',\n      value: function read(arrayBuffer) {\n        var self = this;\n        var options = self.options;\n        var orientation = getOrientation(arrayBuffer);\n        var imageData = self.imageData;\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          self.url = arrayBufferToDataURL(arrayBuffer);\n\n          switch (orientation) {\n            // flip horizontal\n            case 2:\n              scaleX = -1;\n              break;\n            // rotate left 180°\n\n            case 3:\n              rotate = -180;\n              break;\n            // flip vertical\n\n            case 4:\n              scaleY = -1;\n              break;\n            // flip vertical + rotate right 90°\n\n            case 5:\n              rotate = 90;\n              scaleY = -1;\n              break;\n            // rotate right 90°\n\n            case 6:\n              rotate = 90;\n              break;\n            // flip horizontal + rotate right 90°\n\n            case 7:\n              rotate = 90;\n              scaleX = -1;\n              break;\n            // rotate left 90°\n\n            case 8:\n              rotate = -90;\n              break;\n          }\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        self.clone();\n      }\n    }, {\n      key: 'clone',\n      value: function clone() {\n        var self = this;\n        var element = self.element;\n        var url = self.url;\n        var crossOrigin = void 0;\n        var crossOriginUrl = void 0;\n        var start = void 0;\n        var stop = void 0;\n\n        if (self.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (crossOrigin) {\n            crossOriginUrl = url;\n          } else {\n            crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n            crossOriginUrl = addTimestamp(url);\n          }\n        }\n\n        self.crossOrigin = crossOrigin;\n        self.crossOriginUrl = crossOriginUrl;\n        var image = createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        self.image = image;\n        self.onStart = start = proxy(self.start, self);\n        self.onStop = stop = proxy(self.stop, self);\n\n        if (self.isImg) {\n          if (element.complete) {\n            self.start();\n          } else {\n            addListener(element, EVENT_LOAD, start);\n          }\n        } else {\n          addListener(image, EVENT_LOAD, start);\n          addListener(image, EVENT_ERROR, stop);\n          addClass(image, 'cropper-hide');\n          element.parentNode.insertBefore(image, element.nextSibling);\n        }\n      }\n    }, {\n      key: 'start',\n      value: function start(event) {\n        var self = this;\n        var image = self.isImg ? self.element : self.image;\n\n        if (event) {\n          removeListener(image, EVENT_LOAD, self.onStart);\n          removeListener(image, EVENT_ERROR, self.onStop);\n        }\n\n        getImageSize(image, function (naturalWidth, naturalHeight) {\n          extend(self.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          self.loaded = true;\n          self.build();\n        });\n      }\n    }, {\n      key: 'stop',\n      value: function stop() {\n        var self = this;\n        var image = self.image;\n        removeListener(image, EVENT_LOAD, self.onStart);\n        removeListener(image, EVENT_ERROR, self.onStop);\n        removeChild(image);\n        self.image = null;\n      }\n    }, {\n      key: 'build',\n      value: function build() {\n        var self = this;\n        var options = self.options;\n        var element = self.element;\n        var image = self.image;\n        var container = void 0;\n        var cropper = void 0;\n        var canvas = void 0;\n        var dragBox = void 0;\n        var cropBox = void 0;\n        var face = void 0;\n\n        if (!self.loaded) {\n          return;\n        } // Unbuild first when replace\n\n\n        if (self.ready) {\n          self.unbuild();\n        }\n\n        var template = createElement('div');\n        template.innerHTML = TEMPLATE; // Create cropper elements\n\n        self.container = container = element.parentNode;\n        self.cropper = cropper = getByClass(template, 'cropper-container')[0];\n        self.canvas = canvas = getByClass(cropper, 'cropper-canvas')[0];\n        self.dragBox = dragBox = getByClass(cropper, 'cropper-drag-box')[0];\n        self.cropBox = cropBox = getByClass(cropper, 'cropper-crop-box')[0];\n        self.viewBox = getByClass(cropper, 'cropper-view-box')[0];\n        self.face = face = getByClass(cropBox, 'cropper-face')[0];\n        appendChild(canvas, image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!self.isImg) {\n          removeClass(image, 'cropper-hide');\n        }\n\n        self.initPreview();\n        self.bind();\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        self.cropped = options.autoCrop;\n\n        if (options.autoCrop) {\n          if (options.modal) {\n            addClass(dragBox, 'cropper-modal');\n          }\n        } else {\n          addClass(cropBox, CLASS_HIDDEN);\n        }\n\n        if (!options.guides) {\n          addClass(getByClass(cropBox, 'cropper-dashed'), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(getByClass(cropBox, 'cropper-center'), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, 'cropper-bg');\n        }\n\n        if (!options.highlight) {\n          addClass(face, 'cropper-invisible');\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, 'cropper-move');\n          setData$1(face, 'action', 'all');\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(getByClass(cropBox, 'cropper-line'), CLASS_HIDDEN);\n          addClass(getByClass(cropBox, 'cropper-point'), CLASS_HIDDEN);\n        }\n\n        self.setDragMode(options.dragMode);\n        self.render();\n        self.ready = true;\n        self.setData(options.data); // Call the \"ready\" option asynchronously to keep \"image.cropper\" is defined\n\n        self.completing = setTimeout(function () {\n          if (isFunction(options.ready)) {\n            addListener(element, EVENT_READY, options.ready, true);\n          }\n\n          dispatchEvent(element, EVENT_READY);\n          dispatchEvent(element, EVENT_CROP, self.getData());\n          self.complete = true;\n        }, 0);\n      }\n    }, {\n      key: 'unbuild',\n      value: function unbuild() {\n        var self = this;\n\n        if (!self.ready) {\n          return;\n        }\n\n        if (!self.complete) {\n          clearTimeout(self.completing);\n        }\n\n        self.ready = false;\n        self.complete = false;\n        self.initialImageData = null; // Clear `initialCanvasData` is necessary when replace\n\n        self.initialCanvasData = null;\n        self.initialCropBoxData = null;\n        self.containerData = null;\n        self.canvasData = null; // Clear `cropBoxData` is necessary when replace\n\n        self.cropBoxData = null;\n        self.unbind();\n        self.resetPreview();\n        self.previews = null;\n        self.viewBox = null;\n        self.cropBox = null;\n        self.dragBox = null;\n        self.canvas = null;\n        self.container = null;\n        removeChild(self.cropper);\n        self.cropper = null;\n      }\n    }], [{\n      key: 'noConflict',\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n    }, {\n      key: 'setDefaults',\n      value: function setDefaults(options) {\n        extend(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n    return Cropper;\n  }();\n\n  extend(Cropper.prototype, render$1);\n  extend(Cropper.prototype, preview$1);\n  extend(Cropper.prototype, events);\n  extend(Cropper.prototype, handlers);\n  extend(Cropper.prototype, change$1);\n  extend(Cropper.prototype, methods);\n\n  if (typeof window !== 'undefined') {\n    AnotherCropper = window.Cropper;\n    window.Cropper = Cropper;\n  }\n\n  return Cropper;\n});","map":{"version":3,"sources":["D:/Development/VSCode/reactdemo/Reactivities/node_modules/cropperjs/dist/cropper.js"],"names":["global","factory","exports","module","define","amd","Cropper","DEFAULTS","viewMode","dragMode","aspectRatio","NaN","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","call","set","setter","toConsumableArray","arr","Array","isArray","arr2","from","REGEXP_DATA_URL_HEAD","REGEXP_HYPHENATE","REGEXP_ORIGINS","REGEXP_SPACES","REGEXP_SUFFIX","REGEXP_TRIM","REGEXP_USERAGENT","navigator","window","IS_SAFARI_OR_UIWEBVIEW","test","userAgent","objectProto","toString","hasOwnProperty","slice","fromCharCode","String","typeOf","toLowerCase","isNumber","num","isNaN","isUndefined","isObject","isPlainObject","_constructor","e","isFunction","fn","trim","str","replace","each","callback","keys","forEach","extend","_len","arguments","args","_key","assign","apply","concat","arg","proxy","context","_len2","_key2","_len3","args2","_key3","setStyle","element","styles","style","hasClass","classList","contains","className","indexOf","addClass","elem","add","removeClass","remove","toggleClass","added","hyphenate","getData$1","name","dataset","getAttribute","setData$1","setAttribute","removeData","removeAttribute","removeListener","type","handler","types","split","t","removeEventListener","detachEvent","addListener","_handler","once","originalHandler","_len4","_key4","addEventListener","attachEvent","dispatchEvent","event","Event","CustomEvent","bubbles","cancelable","detail","document","createEvent","initEvent","initCustomEvent","fireEvent","getEvent","srcElement","pageX","clientX","eventDoc","ownerDocument","doc","documentElement","body","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","getOffset","box","getBoundingClientRect","left","scrollX","top","scrollY","getByTag","tagName","getElementsByTagName","getByClass","getElementsByClassName","querySelectorAll","createElement","appendChild","removeChild","parentNode","empty","firstChild","isCrossOriginURL","url","parts","match","location","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getImageSize","image","naturalWidth","naturalHeight","newImage","onload","load","width","height","src","getTransforms","transforms","translateX","translateY","rotate","scaleX","scaleY","push","transform","join","WebkitTransform","msTransform","getRotatedSizes","reversed","deg","Math","abs","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","options","canvas","getContext","dstX","dstY","dstWidth","dstHeight","advanced","canvasWidth","canvasHeight","rotated","fillColor","fillStyle","fillRect","save","translate","scale","imageSmoothingEnabled","imageSmoothingQuality","drawImage","floor","getStringFromCharCode","dataView","start","getUint8","getOrientation","arrayBuffer","DataView","byteLength","orientation","exifIDCode","tiffOffset","firstIFDOffset","littleEndian","endianness","app1Start","ifdStart","offset","getUint16","getUint32","setUint16","dataURLToArrayBuffer","dataURL","base64","binary","atob","ArrayBuffer","Uint8Array","charCodeAt","arrayBufferToDataURL","btoa","render$1","render","self","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","hidden","containerData","max","offsetWidth","Number","offsetHeight","imageData","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","minWidth","minHeight","maxWidth","Infinity","maxHeight","newCanvasLeft","newCanvasTop","minLeft","min","minTop","maxLeft","maxTop","changed","rotatedData","isSquareImage","rotatedData2","renderImage","limitCropBox","output","newImageData","reversedData","reversedWidth","reversedHeight","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","complete","getData","DATA_PREVIEW","preview$1","initPreview","crossOrigin","crossOriginUrl","viewBox","image2","previews","querySelector","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","PointerEvent","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_WHEEL","EVENT_DBLCLICK","EVENT_RESIZE","EVENT_CROP_START","EVENT_CROP_MOVE","EVENT_CROP_END","EVENT_CROP$1","EVENT_ZOOM","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","REGEXP_ACTIONS","getPointer","_ref","endOnly","end","endX","endY","startX","startY","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","pointers","action","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","ACTION_NORTH_EAST","ACTION_NORTH_WEST","getMaxZoomRatio","pointers2","ratios","pointer","pointer2","x1","y1","x2","y2","z1","sqrt","z2","sort","a","b","change$1","right","bottom","renderable","shiftKey","range","x","y","X","Y","move","p","getPointersCenter","count","methods","reset","clear","onlyColorChanged","isImg","replaced","enable","disable","destroy","loaded","originalUrl","unbuild","onStart","offsetX","offsetY","moveTo","_originalEvent","zoomTo","oldRatio","rotateTo","_scaleX","_scaleY","rounded","round","setData","scaled","getContainerData","getImageData","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","scaledWidth","scaledHeight","scaledRatio","parameters","source","sourceWidth","sourceHeight","params","srcX","srcY","srcWidth","srcHeight","setAspectRatio","mode","croppable","NAMESPACE","CLASS_HIDDEN","EVENT_ERROR","EVENT_LOAD","EVENT_READY","EVENT_CROP","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","AnotherCropper","init","toDataURL","clone","read","xhr","XMLHttpRequest","onerror","onabort","response","open","responseType","withCredentials","send","stop","onStop","insertBefore","nextSibling","build","template","completing","clearTimeout","noConflict","setDefaults"],"mappings":"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","sourcesContent":["/*!\n * Cropper.js v1.0.0-rc.3\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2017 Fengyuan Chen\n * Released under the MIT license\n *\n * Date: 2017-07-07T12:56:42.462Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Cropper = factory());\n}(this, (function () { 'use strict';\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: 'crop', // 'crop', 'move' or 'none'\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar set = function set(object, property, value, receiver) {\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent !== null) {\n      set(parent, property, value, receiver);\n    }\n  } else if (\"value\" in desc && desc.writable) {\n    desc.value = value;\n  } else {\n    var setter = desc.set;\n\n    if (setter !== undefined) {\n      setter.call(receiver, value);\n    }\n  }\n\n  return value;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n// RegExps\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\nvar REGEXP_SPACES = /\\s+/;\nvar REGEXP_SUFFIX = /^(width|height|left|top|marginLeft|marginTop)$/;\nvar REGEXP_TRIM = /^\\s+(.*)\\s+$/;\nvar REGEXP_USERAGENT = /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i;\n\n// Utilities\nvar navigator = typeof window !== 'undefined' ? window.navigator : null;\nvar IS_SAFARI_OR_UIWEBVIEW = navigator && REGEXP_USERAGENT.test(navigator.userAgent);\nvar objectProto = Object.prototype;\nvar toString = objectProto.toString;\nvar hasOwnProperty = objectProto.hasOwnProperty;\nvar slice = Array.prototype.slice;\nvar fromCharCode = String.fromCharCode;\n\nfunction typeOf(obj) {\n  return toString.call(obj).slice(8, -1).toLowerCase();\n}\n\nfunction isNumber(num) {\n  return typeof num === 'number' && !isNaN(num);\n}\n\nfunction isUndefined(obj) {\n  return typeof obj === 'undefined';\n}\n\nfunction isObject(obj) {\n  return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj !== null;\n}\n\nfunction isPlainObject(obj) {\n  if (!isObject(obj)) {\n    return false;\n  }\n\n  try {\n    var _constructor = obj.constructor;\n    var prototype = _constructor.prototype;\n\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isFunction(fn) {\n  return typeOf(fn) === 'function';\n}\n\nfunction isArray(arr) {\n  return Array.isArray ? Array.isArray(arr) : typeOf(arr) === 'array';\n}\n\n\n\nfunction trim(str) {\n  if (typeof str === 'string') {\n    str = str.trim ? str.trim() : str.replace(REGEXP_TRIM, '$1');\n  }\n\n  return str;\n}\n\nfunction each(obj, callback) {\n  if (obj && isFunction(callback)) {\n    var i = void 0;\n\n    if (isArray(obj) || isNumber(obj.length) /* array-like */) {\n        var length = obj.length;\n\n        for (i = 0; i < length; i++) {\n          if (callback.call(obj, obj[i], i, obj) === false) {\n            break;\n          }\n        }\n      } else if (isObject(obj)) {\n      Object.keys(obj).forEach(function (key) {\n        callback.call(obj, obj[key], key, obj);\n      });\n    }\n  }\n\n  return obj;\n}\n\nfunction extend(obj) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    if (Object.assign) {\n      return Object.assign.apply(Object, [obj].concat(args));\n    }\n\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n}\n\nfunction proxy(fn, context) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return function () {\n    for (var _len3 = arguments.length, args2 = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args2[_key3] = arguments[_key3];\n    }\n\n    return fn.apply(context, args.concat(args2));\n  };\n}\n\nfunction setStyle(element, styles) {\n  var style = element.style;\n\n  each(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = trim(element.className);\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = className + ' ' + value;\n  }\n}\n\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nfunction hyphenate(str) {\n  return str.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n\nfunction getData$1(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  } else if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute('data-' + hyphenate(name));\n}\n\nfunction setData$1(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute('data-' + hyphenate(name), data);\n  }\n}\n\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    delete element[name];\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = null;\n    }\n  } else {\n    element.removeAttribute('data-' + hyphenate(name));\n  }\n}\n\nfunction removeListener(element, type, handler) {\n  var types = trim(type).split(REGEXP_SPACES);\n\n  if (types.length > 1) {\n    each(types, function (t) {\n      removeListener(element, t, handler);\n    });\n    return;\n  }\n\n  if (element.removeEventListener) {\n    element.removeEventListener(type, handler, false);\n  } else if (element.detachEvent) {\n    element.detachEvent('on' + type, handler);\n  }\n}\n\nfunction addListener(element, type, _handler, once) {\n  var types = trim(type).split(REGEXP_SPACES);\n  var originalHandler = _handler;\n\n  if (types.length > 1) {\n    each(types, function (t) {\n      addListener(element, t, _handler);\n    });\n    return;\n  }\n\n  if (once) {\n    _handler = function handler() {\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      removeListener(element, type, _handler);\n\n      return originalHandler.apply(element, args);\n    };\n  }\n\n  if (element.addEventListener) {\n    element.addEventListener(type, _handler, false);\n  } else if (element.attachEvent) {\n    element.attachEvent('on' + type, _handler);\n  }\n}\n\nfunction dispatchEvent(element, type, data) {\n  if (element.dispatchEvent) {\n    var event = void 0;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      if (isUndefined(data)) {\n        event = new Event(type, {\n          bubbles: true,\n          cancelable: true\n        });\n      } else {\n        event = new CustomEvent(type, {\n          detail: data,\n          bubbles: true,\n          cancelable: true\n        });\n      }\n    } else if (isUndefined(data)) {\n      event = document.createEvent('Event');\n      event.initEvent(type, true, true);\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    // IE9+\n    return element.dispatchEvent(event);\n  } else if (element.fireEvent) {\n    // IE6-10 (native events only)\n    return element.fireEvent('on' + type);\n  }\n\n  return true;\n}\n\nfunction getEvent(event) {\n  var e = event || window.event;\n\n  // Fix target property (IE8)\n  if (!e.target) {\n    e.target = e.srcElement || document;\n  }\n\n  if (!isNumber(e.pageX) && isNumber(e.clientX)) {\n    var eventDoc = event.target.ownerDocument || document;\n    var doc = eventDoc.documentElement;\n    var body = eventDoc.body;\n\n    e.pageX = e.clientX + ((doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0));\n    e.pageY = e.clientY + ((doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0));\n  }\n\n  return e;\n}\n\nfunction getOffset(element) {\n  var doc = document.documentElement;\n  var box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + ((window.scrollX || doc && doc.scrollLeft || 0) - (doc && doc.clientLeft || 0)),\n    top: box.top + ((window.scrollY || doc && doc.scrollTop || 0) - (doc && doc.clientTop || 0))\n  };\n}\n\nfunction getByTag(element, tagName) {\n  return element.getElementsByTagName(tagName);\n}\n\nfunction getByClass(element, className) {\n  return element.getElementsByClassName ? element.getElementsByClassName(className) : element.querySelectorAll('.' + className);\n}\n\nfunction createElement(tagName) {\n  return document.createElement(tagName);\n}\n\nfunction appendChild(element, elem) {\n  element.appendChild(elem);\n}\n\nfunction removeChild(element) {\n  if (element.parentNode) {\n    element.parentNode.removeChild(element);\n  }\n}\n\nfunction empty(element) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n\nfunction addTimestamp(url) {\n  var timestamp = 'timestamp=' + new Date().getTime();\n\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n\nfunction getImageSize(image, callback) {\n  // Modern browsers (ignore Safari)\n  if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n    callback(image.naturalWidth, image.naturalHeight);\n    return;\n  }\n\n  // IE8: Don't use `new Image()` here\n  var newImage = createElement('img');\n\n  newImage.onload = function load() {\n    callback(this.width, this.height);\n  };\n\n  newImage.src = image.src;\n}\n\nfunction getTransforms(data) {\n  var transforms = [];\n  var translateX = data.translateX;\n  var translateY = data.translateY;\n  var rotate = data.rotate;\n  var scaleX = data.scaleX;\n  var scaleY = data.scaleY;\n\n  if (isNumber(translateX) && translateX !== 0) {\n    transforms.push('translateX(' + translateX + 'px)');\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    transforms.push('translateY(' + translateY + 'px)');\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    transforms.push('rotate(' + rotate + 'deg)');\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    transforms.push('scaleX(' + scaleX + ')');\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    transforms.push('scaleY(' + scaleY + ')');\n  }\n\n  var transform = transforms.length ? transforms.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n\nfunction getRotatedSizes(data, reversed) {\n  var deg = Math.abs(data.degree) % 180;\n  var arc = (deg > 90 ? 180 - deg : deg) * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var width = data.width;\n  var height = data.height;\n  var aspectRatio = data.aspectRatio;\n  var newWidth = void 0;\n  var newHeight = void 0;\n\n  if (!reversed) {\n    newWidth = width * cosArc + height * sinArc;\n    newHeight = width * sinArc + height * cosArc;\n  } else {\n    newWidth = width / (cosArc + sinArc / aspectRatio);\n    newHeight = newWidth / aspectRatio;\n  }\n\n  return {\n    width: newWidth,\n    height: newHeight\n  };\n}\n\nfunction getSourceCanvas(image, data, options) {\n  var canvas = createElement('canvas');\n  var context = canvas.getContext('2d');\n  var dstX = 0;\n  var dstY = 0;\n  var dstWidth = data.naturalWidth;\n  var dstHeight = data.naturalHeight;\n  var rotate = data.rotate;\n  var scaleX = data.scaleX;\n  var scaleY = data.scaleY;\n  var scalable = isNumber(scaleX) && isNumber(scaleY) && (scaleX !== 1 || scaleY !== 1);\n  var rotatable = isNumber(rotate) && rotate !== 0;\n  var advanced = rotatable || scalable;\n  var canvasWidth = dstWidth * Math.abs(scaleX || 1);\n  var canvasHeight = dstHeight * Math.abs(scaleY || 1);\n  var translateX = void 0;\n  var translateY = void 0;\n  var rotated = void 0;\n\n  if (scalable) {\n    translateX = canvasWidth / 2;\n    translateY = canvasHeight / 2;\n  }\n\n  if (rotatable) {\n    rotated = getRotatedSizes({\n      width: canvasWidth,\n      height: canvasHeight,\n      degree: rotate\n    });\n\n    canvasWidth = rotated.width;\n    canvasHeight = rotated.height;\n    translateX = canvasWidth / 2;\n    translateY = canvasHeight / 2;\n  }\n\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n\n  if (options.fillColor) {\n    context.fillStyle = options.fillColor;\n    context.fillRect(0, 0, canvasWidth, canvasHeight);\n  }\n\n  if (advanced) {\n    dstX = -dstWidth / 2;\n    dstY = -dstHeight / 2;\n\n    context.save();\n    context.translate(translateX, translateY);\n  }\n\n  // Rotate should come first before scale as in the \"getTransform\" function\n  if (rotatable) {\n    context.rotate(rotate * Math.PI / 180);\n  }\n\n  if (scalable) {\n    context.scale(scaleX, scaleY);\n  }\n\n  context.imageSmoothingEnabled = !!options.imageSmoothingEnabled;\n\n  if (options.imageSmoothingQuality) {\n    context.imageSmoothingQuality = options.imageSmoothingQuality;\n  }\n\n  context.drawImage(image, Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n\n  if (advanced) {\n    context.restore();\n  }\n\n  return canvas;\n}\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = start;\n\n  for (length += start; i < length; i++) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var length = dataView.byteLength;\n  var orientation = void 0;\n  var exifIDCode = void 0;\n  var tiffOffset = void 0;\n  var firstIFDOffset = void 0;\n  var littleEndian = void 0;\n  var endianness = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n  var offset = void 0;\n  var i = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset++;\n    }\n  }\n\n  if (app1Start) {\n    exifIDCode = app1Start + 4;\n    tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      endianness = dataView.getUint16(tiffOffset);\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    length = dataView.getUint16(ifdStart, littleEndian);\n\n    for (i = 0; i < length; i++) {\n      offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(offset, littleEndian);\n\n          // Override the orientation with its default value for Safari\n          if (IS_SAFARI_OR_UIWEBVIEW) {\n            dataView.setUint16(offset, 1, littleEndian);\n          }\n\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var length = binary.length;\n  var arrayBuffer = new ArrayBuffer(length);\n  var dataView = new Uint8Array(arrayBuffer);\n  var i = void 0;\n\n  for (i = 0; i < length; i++) {\n    dataView[i] = binary.charCodeAt(i);\n  }\n\n  return arrayBuffer;\n}\n\n// Only available for JPEG image\nfunction arrayBufferToDataURL(arrayBuffer) {\n  var dataView = new Uint8Array(arrayBuffer);\n  var length = dataView.length;\n  var base64 = '';\n  var i = void 0;\n\n  for (i = 0; i < length; i++) {\n    base64 += fromCharCode(dataView[i]);\n  }\n\n  return 'data:image/jpeg;base64,' + btoa(base64);\n}\n\nvar render$1 = {\n  render: function render() {\n    var self = this;\n\n    self.initContainer();\n    self.initCanvas();\n    self.initCropBox();\n\n    self.renderCanvas();\n\n    if (self.cropped) {\n      self.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var self = this;\n    var options = self.options;\n    var element = self.element;\n    var container = self.container;\n    var cropper = self.cropper;\n    var hidden = 'cropper-hidden';\n    var containerData = void 0;\n\n    addClass(cropper, hidden);\n    removeClass(element, hidden);\n\n    self.containerData = containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n\n    addClass(element, hidden);\n    removeClass(cropper, hidden);\n  },\n\n\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var self = this;\n    var viewMode = self.options.viewMode;\n    var containerData = self.containerData;\n    var imageData = self.imageData;\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      aspectRatio: aspectRatio,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n\n    canvasData.oldLeft = canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.oldTop = canvasData.top = (containerData.height - canvasHeight) / 2;\n\n    self.canvasData = canvasData;\n    self.limited = viewMode === 1 || viewMode === 2;\n    self.limitCanvas(true, true);\n    self.initialImageData = extend({}, imageData);\n    self.initialCanvasData = extend({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var self = this;\n    var options = self.options;\n    var viewMode = options.viewMode;\n    var containerData = self.containerData;\n    var canvasData = self.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n    var cropBoxData = self.cropBoxData;\n    var cropped = self.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      if (minCanvasWidth && minCanvasHeight) {\n        if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n          minCanvasHeight = minCanvasWidth / aspectRatio;\n        } else {\n          minCanvasWidth = minCanvasHeight * aspectRatio;\n        }\n      } else if (minCanvasWidth) {\n        minCanvasHeight = minCanvasWidth / aspectRatio;\n      } else if (minCanvasHeight) {\n        minCanvasWidth = minCanvasHeight * aspectRatio;\n      }\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && self.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed) {\n    var self = this;\n    var canvasData = self.canvasData;\n    var imageData = self.imageData;\n    var rotate = imageData.rotate;\n\n    if (self.rotated) {\n      self.rotated = false;\n\n      // Computes rotated sizes with image sizes\n      var rotatedData = getRotatedSizes({\n        width: imageData.width,\n        height: imageData.height,\n        degree: rotate\n      });\n      var aspectRatio = rotatedData.width / rotatedData.height;\n      var isSquareImage = imageData.aspectRatio === 1;\n\n      if (isSquareImage || aspectRatio !== canvasData.aspectRatio) {\n        canvasData.left -= (rotatedData.width - canvasData.width) / 2;\n        canvasData.top -= (rotatedData.height - canvasData.height) / 2;\n        canvasData.width = rotatedData.width;\n        canvasData.height = rotatedData.height;\n        canvasData.aspectRatio = aspectRatio;\n        canvasData.naturalWidth = imageData.naturalWidth;\n        canvasData.naturalHeight = imageData.naturalHeight;\n\n        // Computes rotated sizes with natural image sizes\n        if (isSquareImage && rotate % 90 || rotate % 180) {\n          var rotatedData2 = getRotatedSizes({\n            width: imageData.naturalWidth,\n            height: imageData.naturalHeight,\n            degree: rotate\n          });\n\n          canvasData.naturalWidth = rotatedData2.width;\n          canvasData.naturalHeight = rotatedData2.height;\n        }\n\n        self.limitCanvas(true, false);\n      }\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\n    self.limitCanvas(false, true);\n\n    canvasData.oldLeft = canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.oldTop = canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n\n    setStyle(self.canvas, extend({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n\n    self.renderImage();\n\n    if (self.cropped && self.limited) {\n      self.limitCropBox(true, true);\n    }\n\n    if (changed) {\n      self.output();\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var self = this;\n    var canvasData = self.canvasData;\n    var imageData = self.imageData;\n    var newImageData = void 0;\n    var reversedData = void 0;\n    var reversedWidth = void 0;\n    var reversedHeight = void 0;\n\n    if (imageData.rotate) {\n      reversedData = getRotatedSizes({\n        width: canvasData.width,\n        height: canvasData.height,\n        degree: imageData.rotate,\n        aspectRatio: imageData.aspectRatio\n      }, true);\n\n      reversedWidth = reversedData.width;\n      reversedHeight = reversedData.height;\n\n      newImageData = {\n        width: reversedWidth,\n        height: reversedHeight,\n        left: (canvasData.width - reversedWidth) / 2,\n        top: (canvasData.height - reversedHeight) / 2\n      };\n    }\n\n    extend(imageData, newImageData || {\n      width: canvasData.width,\n      height: canvasData.height,\n      left: 0,\n      top: 0\n    });\n\n    setStyle(self.image, extend({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(extend({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      self.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var self = this;\n    var options = self.options;\n    var aspectRatio = options.aspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var canvasData = self.canvasData;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    self.cropBoxData = cropBoxData;\n    self.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.oldLeft = cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.oldTop = cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n\n    self.initialCropBoxData = extend({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var self = this;\n    var options = self.options;\n    var aspectRatio = options.aspectRatio;\n    var containerData = self.containerData;\n    var canvasData = self.canvasData;\n    var cropBoxData = self.cropBoxData;\n    var limited = self.limited;\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n      var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\n      // The min/maxCropBoxWidth/Height must be less than containerWidth/Height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var self = this;\n    var options = self.options;\n    var containerData = self.containerData;\n    var cropBoxData = self.cropBoxData;\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    self.limitCropBox(false, true);\n\n    cropBoxData.oldLeft = cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.oldTop = cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData$1(self.face, 'action', cropBoxData.width === containerData.width && cropBoxData.height === containerData.height ? 'move' : 'all');\n    }\n\n    setStyle(self.cropBox, extend({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (self.cropped && self.limited) {\n      self.limitCanvas(true, true);\n    }\n\n    if (!self.disabled) {\n      self.output();\n    }\n  },\n  output: function output() {\n    var self = this;\n\n    self.preview();\n\n    if (self.complete) {\n      dispatchEvent(self.element, 'crop', self.getData());\n    }\n  }\n};\n\nvar DATA_PREVIEW = 'preview';\n\nvar preview$1 = {\n  initPreview: function initPreview() {\n    var self = this;\n    var preview = self.options.preview;\n    var image = createElement('img');\n    var crossOrigin = self.crossOrigin;\n    var url = crossOrigin ? self.crossOriginUrl : self.url;\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    appendChild(self.viewBox, image);\n    self.image2 = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview.querySelector ? [preview] : document.querySelectorAll(preview);\n\n    self.previews = previews;\n\n    each(previews, function (element) {\n      var img = createElement('img');\n\n      // Save the original size for recover\n      setData$1(element, DATA_PREVIEW, {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        html: element.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\n      empty(element);\n      appendChild(element, img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    each(this.previews, function (element) {\n      var data = getData$1(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var self = this;\n    var imageData = self.imageData;\n    var canvasData = self.canvasData;\n    var cropBoxData = self.cropBoxData;\n    var cropBoxWidth = cropBoxData.width;\n    var cropBoxHeight = cropBoxData.height;\n    var width = imageData.width;\n    var height = imageData.height;\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!self.cropped || self.disabled) {\n      return;\n    }\n\n    setStyle(self.image2, extend({\n      width: width,\n      height: height\n    }, getTransforms(extend({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n\n    each(self.previews, function (element) {\n      var data = getData$1(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n\n      setStyle(getByTag(element, 'img')[0], extend({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(extend({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\n// Globals\nvar PointerEvent = typeof window !== 'undefined' ? window.PointerEvent : null;\n\n// Events\nvar EVENT_POINTER_DOWN = PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = PointerEvent ? ' pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP$1 = 'crop';\nvar EVENT_ZOOM = 'zoom';\n\nvar events = {\n  bind: function bind() {\n    var self = this;\n    var options = self.options;\n    var element = self.element;\n    var cropper = self.cropper;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP$1, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, self.onCropStart = proxy(self.cropStart, self));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, self.onWheel = proxy(self.wheel, self));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, self.onDblclick = proxy(self.dblclick, self));\n    }\n\n    addListener(document, EVENT_POINTER_MOVE, self.onCropMove = proxy(self.cropMove, self));\n    addListener(document, EVENT_POINTER_UP, self.onCropEnd = proxy(self.cropEnd, self));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, self.onResize = proxy(self.resize, self));\n    }\n  },\n  unbind: function unbind() {\n    var self = this;\n    var options = self.options;\n    var element = self.element;\n    var cropper = self.cropper;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP$1, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, self.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, self.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, self.onDblclick);\n    }\n\n    removeListener(document, EVENT_POINTER_MOVE, self.onCropMove);\n    removeListener(document, EVENT_POINTER_UP, self.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, self.onResize);\n    }\n  }\n};\n\nvar REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\n\nfunction getPointer(_ref, endOnly) {\n  var pageX = _ref.pageX,\n      pageY = _ref.pageY;\n\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n\n  if (endOnly) {\n    return end;\n  }\n\n  return extend({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n\nvar handlers = {\n  resize: function resize() {\n    var self = this;\n    var options = self.options;\n    var container = self.container;\n    var containerData = self.containerData;\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (self.disabled || containerData.width === minContainerWidth || containerData.height === minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      (function () {\n        var canvasData = void 0;\n        var cropBoxData = void 0;\n\n        if (options.restore) {\n          canvasData = self.getCanvasData();\n          cropBoxData = self.getCropBoxData();\n        }\n\n        self.render();\n\n        if (options.restore) {\n          self.setCanvasData(each(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          self.setCropBoxData(each(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      })();\n    }\n  },\n  dblclick: function dblclick() {\n    var self = this;\n\n    if (self.disabled || self.options.dragMode === 'none') {\n      return;\n    }\n\n    self.setDragMode(hasClass(self.dragBox, 'cropper-crop') ? 'move' : 'crop');\n  },\n  wheel: function wheel(event) {\n    var self = this;\n    var e = getEvent(event);\n    var ratio = Number(self.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (self.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (self.wheeling) {\n      return;\n    }\n\n    self.wheeling = true;\n\n    setTimeout(function () {\n      self.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    self.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(event) {\n    var self = this;\n\n    if (self.disabled) {\n      return;\n    }\n\n    var options = self.options;\n    var pointers = self.pointers;\n    var e = getEvent(event);\n    var action = void 0;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      each(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = 'zoom';\n    } else {\n      action = getData$1(e.target, 'action');\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(self.element, 'cropstart', {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    e.preventDefault();\n\n    self.action = action;\n    self.cropping = false;\n\n    if (action === 'crop') {\n      self.cropping = true;\n      addClass(self.dragBox, 'cropper-modal');\n    }\n  },\n  cropMove: function cropMove(event) {\n    var self = this;\n    var action = self.action;\n\n    if (self.disabled || !action) {\n      return;\n    }\n\n    var pointers = self.pointers;\n    var e = getEvent(event);\n\n    e.preventDefault();\n\n    if (dispatchEvent(self.element, 'cropmove', {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      each(e.changedTouches, function (touch) {\n        extend(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      extend(pointers[e.pointerId || 0], getPointer(e, true));\n    }\n\n    self.change(e);\n  },\n  cropEnd: function cropEnd(event) {\n    var self = this;\n\n    if (self.disabled) {\n      return;\n    }\n\n    var action = self.action;\n    var pointers = self.pointers;\n    var e = getEvent(event);\n\n    if (e.changedTouches) {\n      each(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      self.action = '';\n    }\n\n    if (self.cropping) {\n      self.cropping = false;\n      toggleClass(self.dragBox, 'cropper-modal', self.cropped && this.options.modal);\n    }\n\n    dispatchEvent(self.element, 'cropend', {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\n// Actions\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\n\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = extend({}, pointers);\n  var ratios = [];\n\n  each(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n\n    each(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n\n  return ratios[0];\n}\n\nvar change$1 = {\n  change: function change(e) {\n    var self = this;\n    var options = self.options;\n    var containerData = self.containerData;\n    var canvasData = self.canvasData;\n    var cropBoxData = self.cropBoxData;\n    var aspectRatio = options.aspectRatio;\n    var action = self.action;\n    var width = cropBoxData.width;\n    var height = cropBoxData.height;\n    var left = cropBoxData.left;\n    var top = cropBoxData.top;\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset = void 0;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (self.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointers = self.pointers;\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n\n    if (aspectRatio) {\n      range.X = range.y * aspectRatio;\n      range.Y = range.x / aspectRatio;\n    }\n\n    switch (action) {\n      // Move crop box\n      case 'all':\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        width += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top -= range.Y / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        height -= range.y;\n        top += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += range.X / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        width -= range.x;\n        left += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += range.Y / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        height += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left -= range.X / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += range.X;\n        } else {\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      // Move canvas\n      case 'move':\n        self.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case 'zoom':\n        self.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case 'crop':\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(self.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!self.cropped) {\n          removeClass(self.cropBox, 'cropper-hidden');\n          self.cropped = true;\n\n          if (self.limited) {\n            self.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      // No default\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      self.action = action;\n\n      self.renderCropBox();\n    }\n\n    // Override\n    each(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n\n  each(pointers, function (_ref) {\n    var startX = _ref.startX,\n        startY = _ref.startY;\n\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    var self = this;\n\n    if (self.ready && !self.disabled) {\n      if (!self.cropped) {\n        self.cropped = true;\n        self.limitCropBox(true, true);\n\n        if (self.options.modal) {\n          addClass(self.dragBox, 'cropper-modal');\n        }\n\n        removeClass(self.cropBox, 'cropper-hidden');\n      }\n\n      self.setCropBoxData(self.initialCropBoxData);\n    }\n\n    return self;\n  },\n\n\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    var self = this;\n\n    if (self.ready && !self.disabled) {\n      self.imageData = extend({}, self.initialImageData);\n      self.canvasData = extend({}, self.initialCanvasData);\n      self.cropBoxData = extend({}, self.initialCropBoxData);\n\n      self.renderCanvas();\n\n      if (self.cropped) {\n        self.renderCropBox();\n      }\n    }\n\n    return self;\n  },\n\n\n  // Clear the crop box\n  clear: function clear() {\n    var self = this;\n\n    if (self.cropped && !self.disabled) {\n      extend(self.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n\n      self.cropped = false;\n      self.renderCropBox();\n\n      self.limitCanvas();\n\n      // Render canvas after crop box rendered\n      self.renderCanvas();\n\n      removeClass(self.dragBox, 'cropper-modal');\n      addClass(self.cropBox, 'cropper-hidden');\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   *\n   * @param {String} url\n   * @param {Boolean} onlyColorChanged (optional)\n   */\n  replace: function replace(url, onlyColorChanged) {\n    var self = this;\n\n    if (!self.disabled && url) {\n      if (self.isImg) {\n        self.element.src = url;\n      }\n\n      if (onlyColorChanged) {\n        self.url = url;\n        self.image.src = url;\n\n        if (self.ready) {\n          self.image2.src = url;\n\n          each(self.previews, function (element) {\n            getByTag(element, 'img')[0].src = url;\n          });\n        }\n      } else {\n        if (self.isImg) {\n          self.replaced = true;\n        }\n\n        // Clear previous data\n        self.options.data = null;\n        self.load(url);\n      }\n    }\n\n    return self;\n  },\n\n\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    var self = this;\n\n    if (self.ready) {\n      self.disabled = false;\n      removeClass(self.cropper, 'cropper-disabled');\n    }\n\n    return self;\n  },\n\n\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    var self = this;\n\n    if (self.ready) {\n      self.disabled = true;\n      addClass(self.cropper, 'cropper-disabled');\n    }\n\n    return self;\n  },\n\n\n  // Destroy the cropper and remove the instance from the image\n  destroy: function destroy() {\n    var self = this;\n    var element = self.element;\n    var image = self.image;\n\n    if (self.loaded) {\n      if (self.isImg && self.replaced) {\n        element.src = self.originalUrl;\n      }\n\n      self.unbuild();\n      removeClass(element, 'cropper-hidden');\n    } else if (self.isImg) {\n      removeListener(element, 'load', self.onStart);\n    } else if (image) {\n      removeChild(image);\n    }\n\n    removeData(element, 'cropper');\n\n    return self;\n  },\n\n\n  /**\n   * Move the canvas with relative offsets\n   *\n   * @param {Number} offsetX\n   * @param {Number} offsetY (optional)\n   */\n  move: function move(offsetX, offsetY) {\n    var self = this;\n    var canvasData = self.canvasData;\n\n    return self.moveTo(isUndefined(offsetX) ? offsetX : canvasData.left + Number(offsetX), isUndefined(offsetY) ? offsetY : canvasData.top + Number(offsetY));\n  },\n\n\n  /**\n   * Move the canvas to an absolute point\n   *\n   * @param {Number} x\n   * @param {Number} y (optional)\n   */\n  moveTo: function moveTo(x, y) {\n    var self = this;\n    var canvasData = self.canvasData;\n    var changed = false;\n\n    // If \"y\" is not present, its default value is \"x\"\n    if (isUndefined(y)) {\n      y = x;\n    }\n\n    x = Number(x);\n    y = Number(y);\n\n    if (self.ready && !self.disabled && self.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        self.renderCanvas(true);\n      }\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Zoom the canvas with a relative ratio\n   *\n   * @param {Number} ratio\n   * @param {Event} _originalEvent (private)\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var self = this;\n    var canvasData = self.canvasData;\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return self.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, _originalEvent);\n  },\n\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   *\n   * @param {Number} ratio\n   * @param {Event} _originalEvent (private)\n   */\n  zoomTo: function zoomTo(ratio, _originalEvent) {\n    var self = this;\n    var options = self.options;\n    var canvasData = self.canvasData;\n    var width = canvasData.width;\n    var height = canvasData.height;\n    var naturalWidth = canvasData.naturalWidth;\n    var naturalHeight = canvasData.naturalHeight;\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && self.ready && !self.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(self.element, 'zoom', {\n        originalEvent: _originalEvent,\n        oldRatio: width / naturalWidth,\n        ratio: newWidth / naturalWidth\n      }) === false) {\n        return self;\n      }\n\n      if (_originalEvent) {\n        var pointers = self.pointers;\n        var offset = getOffset(self.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      self.renderCanvas(true);\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Rotate the canvas with a relative degree\n   *\n   * @param {Number} degree\n   */\n  rotate: function rotate(degree) {\n    var self = this;\n\n    return self.rotateTo((self.imageData.rotate || 0) + Number(degree));\n  },\n\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#rotate()\n   *\n   * @param {Number} degree\n   */\n  rotateTo: function rotateTo(degree) {\n    var self = this;\n\n    degree = Number(degree);\n\n    if (isNumber(degree) && self.ready && !self.disabled && self.options.rotatable) {\n      self.imageData.rotate = degree % 360;\n      self.rotated = true;\n      self.renderCanvas(true);\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Scale the image\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#scale()\n   *\n   * @param {Number} scaleX\n   * @param {Number} scaleY (optional)\n   */\n  scale: function scale(scaleX, scaleY) {\n    var self = this;\n    var imageData = self.imageData;\n    var changed = false;\n\n    // If \"scaleY\" is not present, its default value is \"scaleX\"\n    if (isUndefined(scaleY)) {\n      scaleY = scaleX;\n    }\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (self.ready && !self.disabled && self.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        changed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        changed = true;\n      }\n\n      if (changed) {\n        self.renderImage(true);\n      }\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Scale the abscissa of the image\n   *\n   * @param {Number} scaleX\n   */\n  scaleX: function scaleX(_scaleX) {\n    var self = this;\n    var scaleY = self.imageData.scaleY;\n\n    return self.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n\n  /**\n   * Scale the ordinate of the image\n   *\n   * @param {Number} scaleY\n   */\n  scaleY: function scaleY(_scaleY) {\n    var self = this;\n    var scaleX = self.imageData.scaleX;\n\n    return self.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   *\n   * @param {Boolean} rounded (optional)\n   * @return {Object} data\n   */\n  getData: function getData(rounded) {\n    var self = this;\n    var options = self.options;\n    var imageData = self.imageData;\n    var canvasData = self.canvasData;\n    var cropBoxData = self.cropBoxData;\n    var ratio = void 0;\n    var data = void 0;\n\n    if (self.ready && self.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n\n      ratio = imageData.width / imageData.naturalWidth;\n\n      each(data, function (n, i) {\n        n /= ratio;\n        data[i] = rounded ? Math.round(n) : n;\n      });\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the cropped area position and size with new data\n   *\n   * @param {Object} data\n   */\n  setData: function setData(data) {\n    var self = this;\n    var options = self.options;\n    var imageData = self.imageData;\n    var canvasData = self.canvasData;\n    var cropBoxData = {};\n    var rotated = void 0;\n    var scaled = void 0;\n    var ratio = void 0;\n\n    if (isFunction(data)) {\n      data = data.call(self.element);\n    }\n\n    if (self.ready && !self.disabled && isPlainObject(data)) {\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          self.rotated = rotated = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          scaled = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          scaled = true;\n        }\n      }\n\n      if (rotated) {\n        self.renderCanvas();\n      } else if (scaled) {\n        self.renderImage();\n      }\n\n      ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      self.setCropBoxData(cropBoxData);\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Get the container size data\n   *\n   * @return {Object} data\n   */\n  getContainerData: function getContainerData() {\n    var self = this;\n\n    return self.ready ? self.containerData : {};\n  },\n\n\n  /**\n   * Get the image position and size data\n   *\n   * @return {Object} data\n   */\n  getImageData: function getImageData() {\n    var self = this;\n\n    return self.loaded ? self.imageData : {};\n  },\n\n\n  /**\n   * Get the canvas position and size data\n   *\n   * @return {Object} data\n   */\n  getCanvasData: function getCanvasData() {\n    var self = this;\n    var canvasData = self.canvasData;\n    var data = {};\n\n    if (self.ready) {\n      each(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the canvas position and size with new data\n   *\n   * @param {Object} data\n   */\n  setCanvasData: function setCanvasData(data) {\n    var self = this;\n    var canvasData = self.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n    if (isFunction(data)) {\n      data = data.call(self.element);\n    }\n\n    if (self.ready && !self.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      self.renderCanvas(true);\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Get the crop box position and size data\n   *\n   * @return {Object} data\n   */\n  getCropBoxData: function getCropBoxData() {\n    var self = this;\n    var cropBoxData = self.cropBoxData;\n    var data = void 0;\n\n    if (self.ready && self.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n\n  /**\n   * Set the crop box position and size with new data\n   *\n   * @param {Object} data\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var self = this;\n    var cropBoxData = self.cropBoxData;\n    var aspectRatio = self.options.aspectRatio;\n    var widthChanged = void 0;\n    var heightChanged = void 0;\n\n    if (isFunction(data)) {\n      data = data.call(self.element);\n    }\n\n    if (self.ready && self.cropped && !self.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      self.renderCropBox();\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Get a canvas drawn the cropped image\n   *\n   * @param {Object} options (optional)\n   * @return {HTMLCanvasElement} canvas\n   */\n  getCroppedCanvas: function getCroppedCanvas(options) {\n    var self = this;\n\n    if (!self.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    if (!isPlainObject(options)) {\n      options = {};\n    }\n\n    // Return the whole canvas if not cropped\n    if (!self.cropped) {\n      return getSourceCanvas(self.image, self.imageData, options);\n    }\n\n    var data = self.getData();\n    var originalWidth = data.width;\n    var originalHeight = data.height;\n    var aspectRatio = originalWidth / originalHeight;\n    var scaledWidth = void 0;\n    var scaledHeight = void 0;\n    var scaledRatio = void 0;\n\n    if (isPlainObject(options)) {\n      scaledWidth = options.width;\n      scaledHeight = options.height;\n\n      if (scaledWidth) {\n        scaledHeight = scaledWidth / aspectRatio;\n        scaledRatio = scaledWidth / originalWidth;\n      } else if (scaledHeight) {\n        scaledWidth = scaledHeight * aspectRatio;\n        scaledRatio = scaledHeight / originalHeight;\n      }\n    }\n\n    // The canvas element will use `Math.floor` on a float number, so floor first\n    var canvasWidth = Math.floor(scaledWidth || originalWidth);\n    var canvasHeight = Math.floor(scaledHeight || originalHeight);\n\n    var canvas = createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    canvas.width = canvasWidth;\n    canvas.height = canvasHeight;\n\n    if (options.fillColor) {\n      context.fillStyle = options.fillColor;\n      context.fillRect(0, 0, canvasWidth, canvasHeight);\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    var parameters = function () {\n      var source = getSourceCanvas(self.image, self.imageData, options);\n      var sourceWidth = source.width;\n      var sourceHeight = source.height;\n      var canvasData = self.canvasData;\n      var params = [source];\n\n      // Source canvas\n      var srcX = data.x + canvasData.naturalWidth * (Math.abs(data.scaleX || 1) - 1) / 2;\n      var srcY = data.y + canvasData.naturalHeight * (Math.abs(data.scaleY || 1) - 1) / 2;\n      var srcWidth = void 0;\n      var srcHeight = void 0;\n\n      // Destination canvas\n      var dstX = void 0;\n      var dstY = void 0;\n      var dstWidth = void 0;\n      var dstHeight = void 0;\n\n      if (srcX <= -originalWidth || srcX > sourceWidth) {\n        srcX = srcWidth = dstX = dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = dstWidth = Math.min(sourceWidth, originalWidth + srcX);\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = dstWidth = Math.min(originalWidth, sourceWidth - srcX);\n      }\n\n      if (srcWidth <= 0 || srcY <= -originalHeight || srcY > sourceHeight) {\n        srcY = srcHeight = dstY = dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = dstHeight = Math.min(sourceHeight, originalHeight + srcY);\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = dstHeight = Math.min(originalHeight, sourceHeight - srcY);\n      }\n\n      params.push(Math.floor(srcX), Math.floor(srcY), Math.floor(srcWidth), Math.floor(srcHeight));\n\n      // Scale destination sizes\n      if (scaledRatio) {\n        dstX *= scaledRatio;\n        dstY *= scaledRatio;\n        dstWidth *= scaledRatio;\n        dstHeight *= scaledRatio;\n      }\n\n      // Avoid \"IndexSizeError\" in IE and Firefox\n      if (dstWidth > 0 && dstHeight > 0) {\n        params.push(Math.floor(dstX), Math.floor(dstY), Math.floor(dstWidth), Math.floor(dstHeight));\n      }\n\n      return params;\n    }();\n\n    context.imageSmoothingEnabled = !!options.imageSmoothingEnabled;\n\n    if (options.imageSmoothingQuality) {\n      context.imageSmoothingQuality = options.imageSmoothingQuality;\n    }\n\n    context.drawImage.apply(context, toConsumableArray(parameters));\n\n    return canvas;\n  },\n\n\n  /**\n   * Change the aspect ratio of the crop box\n   *\n   * @param {Number} aspectRatio\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var self = this;\n    var options = self.options;\n\n    if (!self.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (self.ready) {\n        self.initCropBox();\n\n        if (self.cropped) {\n          self.renderCropBox();\n        }\n      }\n    }\n\n    return self;\n  },\n\n\n  /**\n   * Change the drag mode\n   *\n   * @param {String} mode (optional)\n   */\n  setDragMode: function setDragMode(mode) {\n    var self = this;\n    var options = self.options;\n    var dragBox = self.dragBox;\n    var face = self.face;\n    var croppable = void 0;\n    var movable = void 0;\n\n    if (self.loaded && !self.disabled) {\n      croppable = mode === 'crop';\n      movable = options.movable && mode === 'move';\n      mode = croppable || movable ? mode : 'none';\n\n      setData$1(dragBox, 'action', mode);\n      toggleClass(dragBox, 'cropper-crop', croppable);\n      toggleClass(dragBox, 'cropper-move', movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData$1(face, 'action', mode);\n        toggleClass(face, 'cropper-crop', croppable);\n        toggleClass(face, 'cropper-move', movable);\n      }\n    }\n\n    return self;\n  }\n};\n\n// Constants\nvar NAMESPACE = 'cropper';\n\n// Classes\nvar CLASS_HIDDEN = NAMESPACE + '-hidden';\n\n// Events\nvar EVENT_ERROR = 'error';\nvar EVENT_LOAD = 'load';\nvar EVENT_READY = 'ready';\nvar EVENT_CROP = 'crop';\n\n// RegExps\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n\nvar AnotherCropper = void 0;\n\nvar Cropper = function () {\n  function Cropper(element, options) {\n    classCallCheck(this, Cropper);\n\n    var self = this;\n\n    self.element = element;\n    self.options = extend({}, DEFAULTS, isPlainObject(options) && options);\n    self.loaded = false;\n    self.ready = false;\n    self.complete = false;\n    self.rotated = false;\n    self.cropped = false;\n    self.disabled = false;\n    self.replaced = false;\n    self.limited = false;\n    self.wheeling = false;\n    self.isImg = false;\n    self.originalUrl = '';\n    self.canvasData = null;\n    self.cropBoxData = null;\n    self.previews = null;\n    self.pointers = {};\n    self.init();\n  }\n\n  createClass(Cropper, [{\n    key: 'init',\n    value: function init() {\n      var self = this;\n      var element = self.element;\n      var tagName = element.tagName.toLowerCase();\n      var url = void 0;\n\n      if (getData$1(element, NAMESPACE)) {\n        return;\n      }\n\n      setData$1(element, NAMESPACE, self);\n\n      if (tagName === 'img') {\n        self.isImg = true;\n\n        // e.g.: \"img/picture.jpg\"\n        self.originalUrl = url = element.getAttribute('src');\n\n        // Stop when it's a blank image\n        if (!url) {\n          return;\n        }\n\n        // e.g.: \"http://example.com/img/picture.jpg\"\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      self.load(url);\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var self = this;\n      var options = self.options;\n      var element = self.element;\n\n      if (!url) {\n        return;\n      }\n\n      self.url = url;\n      self.imageData = {};\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        self.clone();\n        return;\n      }\n\n      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          self.read(dataURLToArrayBuffer(url));\n        } else {\n          self.clone();\n        }\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = xhr.onabort = function () {\n        self.clone();\n      };\n\n      xhr.onload = function () {\n        self.read(xhr.response);\n      };\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('get', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: 'read',\n    value: function read(arrayBuffer) {\n      var self = this;\n      var options = self.options;\n      var orientation = getOrientation(arrayBuffer);\n      var imageData = self.imageData;\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        self.url = arrayBufferToDataURL(arrayBuffer);\n\n        switch (orientation) {\n\n          // flip horizontal\n          case 2:\n            scaleX = -1;\n            break;\n\n          // rotate left 180°\n          case 3:\n            rotate = -180;\n            break;\n\n          // flip vertical\n          case 4:\n            scaleY = -1;\n            break;\n\n          // flip vertical + rotate right 90°\n          case 5:\n            rotate = 90;\n            scaleY = -1;\n            break;\n\n          // rotate right 90°\n          case 6:\n            rotate = 90;\n            break;\n\n          // flip horizontal + rotate right 90°\n          case 7:\n            rotate = 90;\n            scaleX = -1;\n            break;\n\n          // rotate left 90°\n          case 8:\n            rotate = -90;\n            break;\n        }\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      self.clone();\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var self = this;\n      var element = self.element;\n      var url = self.url;\n      var crossOrigin = void 0;\n      var crossOriginUrl = void 0;\n      var start = void 0;\n      var stop = void 0;\n\n      if (self.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous';\n\n          // Bust cache when there is not a \"crossOrigin\" property\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      self.crossOrigin = crossOrigin;\n      self.crossOriginUrl = crossOriginUrl;\n\n      var image = createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      self.image = image;\n      self.onStart = start = proxy(self.start, self);\n      self.onStop = stop = proxy(self.stop, self);\n\n      if (self.isImg) {\n        if (element.complete) {\n          self.start();\n        } else {\n          addListener(element, EVENT_LOAD, start);\n        }\n      } else {\n        addListener(image, EVENT_LOAD, start);\n        addListener(image, EVENT_ERROR, stop);\n        addClass(image, 'cropper-hide');\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start(event) {\n      var self = this;\n      var image = self.isImg ? self.element : self.image;\n\n      if (event) {\n        removeListener(image, EVENT_LOAD, self.onStart);\n        removeListener(image, EVENT_ERROR, self.onStop);\n      }\n\n      getImageSize(image, function (naturalWidth, naturalHeight) {\n        extend(self.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n\n        self.loaded = true;\n        self.build();\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var self = this;\n      var image = self.image;\n\n      removeListener(image, EVENT_LOAD, self.onStart);\n      removeListener(image, EVENT_ERROR, self.onStop);\n\n      removeChild(image);\n      self.image = null;\n    }\n  }, {\n    key: 'build',\n    value: function build() {\n      var self = this;\n      var options = self.options;\n      var element = self.element;\n      var image = self.image;\n      var container = void 0;\n      var cropper = void 0;\n      var canvas = void 0;\n      var dragBox = void 0;\n      var cropBox = void 0;\n      var face = void 0;\n\n      if (!self.loaded) {\n        return;\n      }\n\n      // Unbuild first when replace\n      if (self.ready) {\n        self.unbuild();\n      }\n\n      var template = createElement('div');\n      template.innerHTML = TEMPLATE;\n\n      // Create cropper elements\n      self.container = container = element.parentNode;\n      self.cropper = cropper = getByClass(template, 'cropper-container')[0];\n      self.canvas = canvas = getByClass(cropper, 'cropper-canvas')[0];\n      self.dragBox = dragBox = getByClass(cropper, 'cropper-drag-box')[0];\n      self.cropBox = cropBox = getByClass(cropper, 'cropper-crop-box')[0];\n      self.viewBox = getByClass(cropper, 'cropper-view-box')[0];\n      self.face = face = getByClass(cropBox, 'cropper-face')[0];\n\n      appendChild(canvas, image);\n\n      // Hide the original image\n      addClass(element, CLASS_HIDDEN);\n\n      // Inserts the cropper after to the current image\n      container.insertBefore(cropper, element.nextSibling);\n\n      // Show the image if is hidden\n      if (!self.isImg) {\n        removeClass(image, 'cropper-hide');\n      }\n\n      self.initPreview();\n      self.bind();\n\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n      self.cropped = options.autoCrop;\n\n      if (options.autoCrop) {\n        if (options.modal) {\n          addClass(dragBox, 'cropper-modal');\n        }\n      } else {\n        addClass(cropBox, CLASS_HIDDEN);\n      }\n\n      if (!options.guides) {\n        addClass(getByClass(cropBox, 'cropper-dashed'), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(getByClass(cropBox, 'cropper-center'), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, 'cropper-bg');\n      }\n\n      if (!options.highlight) {\n        addClass(face, 'cropper-invisible');\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, 'cropper-move');\n        setData$1(face, 'action', 'all');\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(getByClass(cropBox, 'cropper-line'), CLASS_HIDDEN);\n        addClass(getByClass(cropBox, 'cropper-point'), CLASS_HIDDEN);\n      }\n\n      self.setDragMode(options.dragMode);\n      self.render();\n      self.ready = true;\n      self.setData(options.data);\n\n      // Call the \"ready\" option asynchronously to keep \"image.cropper\" is defined\n      self.completing = setTimeout(function () {\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, true);\n        }\n\n        dispatchEvent(element, EVENT_READY);\n        dispatchEvent(element, EVENT_CROP, self.getData());\n\n        self.complete = true;\n      }, 0);\n    }\n  }, {\n    key: 'unbuild',\n    value: function unbuild() {\n      var self = this;\n\n      if (!self.ready) {\n        return;\n      }\n\n      if (!self.complete) {\n        clearTimeout(self.completing);\n      }\n\n      self.ready = false;\n      self.complete = false;\n      self.initialImageData = null;\n\n      // Clear `initialCanvasData` is necessary when replace\n      self.initialCanvasData = null;\n      self.initialCropBoxData = null;\n      self.containerData = null;\n      self.canvasData = null;\n\n      // Clear `cropBoxData` is necessary when replace\n      self.cropBoxData = null;\n      self.unbind();\n\n      self.resetPreview();\n      self.previews = null;\n\n      self.viewBox = null;\n      self.cropBox = null;\n      self.dragBox = null;\n      self.canvas = null;\n      self.container = null;\n\n      removeChild(self.cropper);\n      self.cropper = null;\n    }\n  }], [{\n    key: 'noConflict',\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n  }, {\n    key: 'setDefaults',\n    value: function setDefaults(options) {\n      extend(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n  return Cropper;\n}();\n\nextend(Cropper.prototype, render$1);\nextend(Cropper.prototype, preview$1);\nextend(Cropper.prototype, events);\nextend(Cropper.prototype, handlers);\nextend(Cropper.prototype, change$1);\nextend(Cropper.prototype, methods);\n\nif (typeof window !== 'undefined') {\n  AnotherCropper = window.Cropper;\n  window.Cropper = Cropper;\n}\n\nreturn Cropper;\n\n})));\n"]},"metadata":{},"sourceType":"script"}
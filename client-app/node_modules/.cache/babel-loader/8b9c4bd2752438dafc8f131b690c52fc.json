{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\VSCode\\\\reactdemo\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\dashboard\\\\ActivityListItem.tsx\";\nimport React from 'react';\nimport { Item, Button, Segment, Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport ActivityListItemAttendees from './ActivityListItemAttendees';\n\nconst ActivityListItem = ({\n  activity\n}) => {\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  return React.createElement(Segment.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Item.Image, {\n    size: \"tiny\",\n    circular: true,\n    src: host.image || '/assets/user.png',\n    style: {\n      marginBottom: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(Item.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Item.Header, {\n    as: Link,\n    to: `/activities/${activity.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, activity.title), React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Hosted by \", host.displayName), activity.isHost && React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Label, {\n    basic: true,\n    color: \"orange\",\n    content: \"You are hosting this activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), activity.isGoing && !activity.isHost && React.createElement(Item.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Label, {\n    basic: true,\n    color: \"green\",\n    content: \"You are going to this activity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))))), React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"clock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \" \", format(activity.date, 'h:mm a'), React.createElement(Icon, {\n    name: \"marker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), \" \", activity.venue, \", \", activity.city), React.createElement(Segment, {\n    secondary: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ActivityListItemAttendees, {\n    attendees: activity.attendees,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Segment, {\n    clearing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, activity.description), React.createElement(Button, {\n    as: Link,\n    to: `/activities/${activity.id}`,\n    floated: \"right\",\n    content: \"View\",\n    color: \"blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default ActivityListItem;","map":{"version":3,"sources":["D:/Development/VSCode/reactdemo/Reactivities/client-app/src/features/activities/dashboard/ActivityListItem.tsx"],"names":["React","Item","Button","Segment","Icon","Label","Link","format","ActivityListItemAttendees","ActivityListItem","activity","host","attendees","filter","x","isHost","image","marginBottom","id","title","displayName","isGoing","date","venue","city","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Item, Button, Segment, Icon, Label } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IActivity } from '../../../app/models/activity';\nimport {format} from 'date-fns';\nimport ActivityListItemAttendees from './ActivityListItemAttendees';\n\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\n  const host = activity.attendees.filter(x => x.isHost)[0];\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image size='tiny' circular src={host.image || '/assets/user.png'} style={{ marginBottom: 3 }} />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>{activity.title}</Item.Header>\n              <Item.Description>Hosted by {host.displayName}</Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color='orange'\n                    content='You are hosting this activity'\n                  />\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label\n                    basic\n                    color='green'\n                    content='You are going to this activity'\n                  />\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <Icon name='clock' /> {format(activity.date, 'h:mm a')}\n        <Icon name='marker' /> {activity.venue}, {activity.city}\n      </Segment>\n      <Segment secondary><ActivityListItemAttendees attendees={activity.attendees}/></Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          floated='right'\n          content='View'\n          color='blue'\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n"]},"metadata":{},"sourceType":"module"}
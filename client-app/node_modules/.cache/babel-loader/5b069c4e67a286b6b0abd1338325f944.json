{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\VSCode\\\\reactdemo\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\details\\\\ActivityDetailedHeader.tsx\";\nimport React, { useContext } from 'react';\nimport { Segment, Item, Header, Button, Image } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nconst activityImageStyle = {\n  filter: 'brightness(30%)'\n};\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white'\n};\n\nconst ActivityDetailedHeader = ({\n  activity\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    attendActivity,\n    cancelAttendance,\n    loading\n  } = rootStore.activityStore;\n  return React.createElement(Segment.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    basic: true,\n    attached: \"top\",\n    style: {\n      padding: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: `/assets/categoryImages/${activity.category}.jpg`,\n    fluid: true,\n    style: activityImageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Segment, {\n    style: activityImageTextStyle,\n    basic: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Item.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Item.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Header, {\n    size: \"huge\",\n    content: activity.title,\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, format(activity.date, 'eeee do MMMM')), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Hosted by \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Bob\"))))))), React.createElement(Segment, {\n    clearing: true,\n    attached: \"bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, activity.isHost ? React.createElement(Button, {\n    as: Link,\n    to: `/manage/${activity.id}`,\n    color: \"orange\",\n    floated: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Manage Event\") : activity.isGoing ? React.createElement(Button, {\n    loading: loading,\n    onClick: cancelAttendance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Cancel attendance\") : React.createElement(Button, {\n    loading: loading,\n    onClick: attendActivity,\n    color: \"teal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Join Activity\")));\n};\n\nexport default observer(ActivityDetailedHeader);","map":{"version":3,"sources":["D:/Development/VSCode/reactdemo/Reactivities/client-app/src/features/activities/details/ActivityDetailedHeader.tsx"],"names":["React","useContext","Segment","Item","Header","Button","Image","observer","Link","format","activityImageStyle","filter","activityImageTextStyle","position","bottom","left","width","height","color","ActivityDetailedHeader","activity","rootStore","RootStoreContext","attendActivity","cancelAttendance","loading","activityStore","padding","category","title","date","isHost","id","isGoing"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Segment, Item, Header, Button, Image } from 'semantic-ui-react';\nimport { IActivity } from '../../../app/models/activity';\nimport { observer } from 'mobx-react-lite';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\n\nconst activityImageStyle = {\n  filter: 'brightness(30%)'\n};\n\nconst activityImageTextStyle = {\n  position: 'absolute',\n  bottom: '5%',\n  left: '5%',\n  width: '100%',\n  height: 'auto',\n  color: 'white'\n};\n\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\n  activity\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: '0' }}>\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: 'white' }}\n                />\n                <p>{format(activity.date, 'eeee do MMMM')}</p>\n                <p>\n                  Hosted by <strong>Bob</strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <Button\n            as={Link}\n            to={`/manage/${activity.id}`}\n            color=\"orange\"\n            floated=\"right\"\n          >\n            Manage Event\n          </Button>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={cancelAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default observer(ActivityDetailedHeader);\n"]},"metadata":{},"sourceType":"module"}
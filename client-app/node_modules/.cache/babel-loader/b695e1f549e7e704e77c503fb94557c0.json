{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\VSCode\\\\reactdemo\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfilePhotos.tsx\";\nimport React, { useContext, useState } from 'react';\nimport { Tab, Header, Card, Image, Button, Grid } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport PhotoUploadWidget from '../../app/common/photoUpload/PhotoUploadWidget';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfilePhotos = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    isCurrentUser,\n    uploadPhoto,\n    uploadingPhoto,\n    setMainPhoto,\n    deletePhoto,\n    loading\n  } = rootStore.profileStore;\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(undefined);\n  const [deleteTarget, setDeleteTarget] = useState(undefined);\n\n  const handleUploadImage = photo => {\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\n  };\n\n  return React.createElement(Tab.Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 16,\n    style: {\n      paddingBottom: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Header, {\n    floated: \"left\",\n    icon: \"image\",\n    content: \"Photos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), isCurrentUser && React.createElement(Button, {\n    onClick: () => setAddPhotoMode(!addPhotoMode),\n    floated: \"right\",\n    basic: true,\n    content: addPhotoMode ? 'Cancel' : 'Add Photo',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, addPhotoMode ? React.createElement(PhotoUploadWidget, {\n    uploadPhoto: handleUploadImage,\n    loading: uploadingPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : React.createElement(Card.Group, {\n    itemsPerRow: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, profile && profile.photos.map(photo => React.createElement(Card, {\n    key: photo.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: photo.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), isCurrentUser && React.createElement(Button.Group, {\n    fluid: true,\n    widths: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => {\n      setMainPhoto(photo);\n      setTarget(e.currentTarget.name);\n    },\n    name: photo.id,\n    disabled: photo.isMain,\n    loading: loading && target === photo.id,\n    basic: true,\n    positive: true,\n    content: \"Main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Button, {\n    name: photo.id,\n    disabled: photo.isMain,\n    onClick: e => {\n      deletePhoto(photo);\n      setDeleteTarget(e.currentTarget.name);\n    },\n    loading: loading && deleteTarget === photo.id,\n    basic: true,\n    negative: true,\n    icon: \"trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))))))));\n};\n\nexport default observer(ProfilePhotos);","map":{"version":3,"sources":["D:/Development/VSCode/reactdemo/Reactivities/client-app/src/features/profiles/ProfilePhotos.tsx"],"names":["React","useContext","useState","Tab","Header","Card","Image","Button","Grid","RootStoreContext","PhotoUploadWidget","observer","ProfilePhotos","rootStore","profile","isCurrentUser","uploadPhoto","uploadingPhoto","setMainPhoto","deletePhoto","loading","profileStore","addPhotoMode","setAddPhotoMode","target","setTarget","undefined","deleteTarget","setDeleteTarget","handleUploadImage","photo","then","paddingBottom","photos","map","id","url","e","currentTarget","name","isMain"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Tab, Header, Card, Image, Button, Grid } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport PhotoUploadWidget from '../../app/common/photoUpload/PhotoUploadWidget';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMainPhoto,\r\n    deletePhoto,\r\n    loading\r\n  } = rootStore.profileStore;\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState<string | undefined>(undefined);\r\n  const [deleteTarget, setDeleteTarget] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadImage = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\r\n          <Header floated='left' icon='image' content='Photos' />\r\n          {isCurrentUser && (\r\n            <Button\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n              floated='right'\r\n              basic\r\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadImage}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map(photo => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          onClick={e => {\r\n                            setMainPhoto(photo);\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          loading={loading && target === photo.id}\r\n                          basic\r\n                          positive\r\n                          content='Main'\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          onClick={(e) => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name)\r\n                          }}\r\n                          loading={loading && deleteTarget === photo.id}\r\n                          basic\r\n                          negative\r\n                          icon='trash'\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n"]},"metadata":{},"sourceType":"module"}
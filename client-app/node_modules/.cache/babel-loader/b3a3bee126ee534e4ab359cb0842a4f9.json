{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\VSCode\\\\reactdemo\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\profiles\\\\ProfilePage.tsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileContent from './ProfileContent';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfilePage = ({\n  match\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadingProfile,\n    profile,\n    loadProfile\n  } = rootStore.profileStore;\n  useEffect(() => {\n    loadProfile(match.params.username);\n  }, [loadProfile, match]);\n  if (loadingProfile) return React.createElement(LoadingComponent, {\n    content: \"Loading profile...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ProfileHeader, {\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(ProfileContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })));\n};\n\nexport default observer(ProfilePage);","map":{"version":3,"sources":["D:/Development/VSCode/reactdemo/Reactivities/client-app/src/features/profiles/ProfilePage.tsx"],"names":["React","useContext","useEffect","Grid","ProfileHeader","ProfileContent","RootStoreContext","LoadingComponent","observer","ProfilePage","match","rootStore","loadingProfile","profile","loadProfile","profileStore","params","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAQA,MAAMC,WAA6B,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAC/C,QAAMC,SAAS,GAAGV,UAAU,CAACK,gBAAD,CAA5B;AACA,QAAM;AAACM,IAAAA,cAAD;AAAiBC,IAAAA,OAAjB;AAA0BC,IAAAA;AAA1B,MAAyCH,SAAS,CAACI,YAAzD;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,WAAW,CAACJ,KAAK,CAACM,MAAN,CAAaC,QAAd,CAAX;AACH,GAFQ,EAEN,CAACH,WAAD,EAAcJ,KAAd,CAFM,CAAT;AAIA,MAAIE,cAAJ,EAAoB,OAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEpB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAQH,CAlBD;;AAoBA,eAAeL,QAAQ,CAACC,WAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport { Grid } from 'semantic-ui-react';\r\nimport ProfileHeader from './ProfileHeader';\r\nimport ProfileContent from './ProfileContent';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\ninterface RouteParams {\r\n    username: string\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nconst ProfilePage: React.FC<IProps> = ({match}) => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {loadingProfile, profile, loadProfile} = rootStore.profileStore;\r\n\r\n    useEffect(() => {\r\n        loadProfile(match.params.username);\r\n    }, [loadProfile, match])\r\n\r\n    if (loadingProfile) return <LoadingComponent content='Loading profile...' />\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={16}>\r\n                <ProfileHeader profile={profile!} />\r\n                <ProfileContent />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default observer(ProfilePage);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\VSCode\\\\reactdemo\\\\Reactivities\\\\client-app\\\\src\\\\features\\\\activities\\\\details\\\\ActivityDetails.tsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ActivityStore from '../../../app/stores/activityStore';\nimport { observer } from 'mobx-react-lite';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\nconst ActivityDetails = ({\n  match,\n  history\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const {\n    activity,\n    loadActivity,\n    loadingInitial\n  } = activityStore;\n  useEffect(() => {\n    loadActivity(match.params.id);\n  }, [loadActivity, match.params.id, history]);\n  if (loadingInitial) return React.createElement(LoadingComponent, {\n    content: \"Loading activity...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n  if (!activity) return React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Activity not found\");\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ActivityDetailedHeader, {\n    activity: activity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(ActivityDetailedInfo, {\n    activity: activity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(ActivityDetailedChat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ActivityDetailedSidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n};\n\nexport default observer(ActivityDetails);","map":{"version":3,"sources":["D:/Development/VSCode/reactdemo/Reactivities/client-app/src/features/activities/details/ActivityDetails.tsx"],"names":["React","useContext","useEffect","Grid","ActivityStore","observer","LoadingComponent","ActivityDetailedHeader","ActivityDetailedInfo","ActivityDetailedChat","ActivityDetailedSidebar","ActivityDetails","match","history","activityStore","activity","loadActivity","loadingInitial","params","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;AAMA,MAAMC,eAA4D,GAAG,CAAC;AACpEC,EAAAA,KADoE;AAEpEC,EAAAA;AAFoE,CAAD,KAG/D;AACJ,QAAMC,aAAa,GAAGb,UAAU,CAACG,aAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAA6CH,aAAnD;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,YAAY,CAACJ,KAAK,CAACM,MAAN,CAAaC,EAAd,CAAZ;AACD,GAFQ,EAEN,CAACH,YAAD,EAAeJ,KAAK,CAACM,MAAN,CAAaC,EAA5B,EAAgCN,OAAhC,CAFM,CAAT;AAIA,MAAII,cAAJ,EAAoB,OAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,qBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEpB,MAAI,CAACF,QAAL,EAAe,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AAEf,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AAAwB,IAAA,QAAQ,EAAEA,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAEA,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF;AAYD,CA3BD;;AA6BA,eAAeV,QAAQ,CAACM,eAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ActivityStore from '../../../app/stores/activityStore';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\nimport ActivityDetailedChat from './ActivityDetailedChat';\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\n\ninterface DetailParams {\n  id: string;\n}\n\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const activityStore = useContext(ActivityStore);\n  const { activity, loadActivity, loadingInitial } = activityStore;\n\n  useEffect(() => {\n    loadActivity(match.params.id);\n  }, [loadActivity, match.params.id, history]);\n\n  if (loadingInitial) return <LoadingComponent content='Loading activity...' />;\n\n  if (!activity) return <h2>Activity not found</h2>;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ActivityDetails);\n"]},"metadata":{},"sourceType":"module"}
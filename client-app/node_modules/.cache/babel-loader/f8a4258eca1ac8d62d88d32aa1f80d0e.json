{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\VSCode\\\\reactdemo\\\\Reactivities\\\\client-app\\\\src\\\\app\\\\common\\\\photoUpload\\\\PhotoWidgetCropper.tsx\";\nimport React, { useRef } from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css';\n\nconst PhotoWidgetCropper = ({\n  setImage,\n  imagePreview\n}) => {\n  const cropper = useRef(null); // const cropImage = () => {\n  //   if (\n  //     cropper.current &&\n  //     typeof cropper.current.getCroppedCanvas() === 'undefined'\n  //   ) {\n  //     return;\n  //   }\n  //   cropper &&\n  //     cropper.current &&\n  //     cropper.current.getCroppedCanvas().toBlob((blob: any) => {\n  //       setImage(blob);\n  //     }, 'image/jpeg');\n  // };\n\n  return React.createElement(Cropper, {\n    ref: cropper,\n    src: imagePreview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) // <Cropper \n  //   ref={cropper}\n  //   src={imagePreview}\n  //   style={{ height: 200, width: '100%' }}\n  //   // Cropper.js options\n  //   aspectRatio={1 / 1}\n  //   preview='.img-preview'\n  //   guides={false}\n  //   viewMode={1}\n  //   dragMode='move'\n  //   scalable={true}\n  //   cropBoxMovable={true}\n  //   cropBoxResizable={true}\n  //   crop={cropImage}\n  // />\n  ;\n};\n\nexport default PhotoWidgetCropper;","map":{"version":3,"sources":["D:/Development/VSCode/reactdemo/Reactivities/client-app/src/app/common/photoUpload/PhotoWidgetCropper.tsx"],"names":["React","useRef","Cropper","PhotoWidgetCropper","setImage","imagePreview","cropper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAO,4BAAP;;AAOA,MAAMC,kBAAoC,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAgC;AAC3E,QAAMC,OAAO,GAAGL,MAAM,CAAU,IAAV,CAAtB,CAD2E,CAG3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACE,oBAAC,OAAD;AACE,IAAA,GAAG,EAAEK,OADP;AAEE,IAAA,GAAG,EAAED,YAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBF;AAqBD,CAtCD;;AAwCA,eAAeF,kBAAf","sourcesContent":["import React, { useRef } from 'react';\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface IProps {\r\n  setImage: (file: Blob) => void;\r\n  imagePreview: string;\r\n}\r\n\r\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\r\n  const cropper = useRef<Cropper>(null);\r\n\r\n  // const cropImage = () => {\r\n  //   if (\r\n  //     cropper.current &&\r\n  //     typeof cropper.current.getCroppedCanvas() === 'undefined'\r\n  //   ) {\r\n  //     return;\r\n  //   }\r\n  //   cropper &&\r\n  //     cropper.current &&\r\n  //     cropper.current.getCroppedCanvas().toBlob((blob: any) => {\r\n  //       setImage(blob);\r\n  //     }, 'image/jpeg');\r\n  // };\r\n\r\n  return (\r\n    <Cropper \r\n      ref={cropper}\r\n      src={imagePreview}\r\n    />\r\n    // <Cropper \r\n    //   ref={cropper}\r\n    //   src={imagePreview}\r\n    //   style={{ height: 200, width: '100%' }}\r\n    //   // Cropper.js options\r\n    //   aspectRatio={1 / 1}\r\n    //   preview='.img-preview'\r\n    //   guides={false}\r\n    //   viewMode={1}\r\n    //   dragMode='move'\r\n    //   scalable={true}\r\n    //   cropBoxMovable={true}\r\n    //   cropBoxResizable={true}\r\n    //   crop={cropImage}\r\n    // />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n"]},"metadata":{},"sourceType":"module"}